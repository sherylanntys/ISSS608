{
  "hash": "ff0f0f3f1209c969e901283651ddd2a8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 00: Working with tidyverse\"\nauthor: \"Sheryl Ann Tan Yi-Shi\"\ndate-modified: \"last-modified\"\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## **Getting Started**\n\nLoading tidyverse onto the R environment by using the code chunk below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n\n## **Importing Data**\n\nThe code chunk below uses read_csv() of readr to import REALIS2019.csv into the R environment as a tibble data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2019 <- read_csv(\"data/REALIS2019.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata_fat <- read_csv(\"data/PopData2019_fat.csv\")\n```\n:::\n\n\n\n## **Pivoting Data**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata_long <- popdata_fat %>%\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(popdata_long,\"rds/popdata_long.rds\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## **Working with dplyr**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2019_selected <- realis2019 %>%\n  select('Project Name',\n         'Transacted Price ($)',\n         'Type of Sale',\n         'Unit Price ($ psm)',\n         'Property Type')\nrealis2019_selected\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19,515 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   <chr>                               <dbl> <chr>                         <dbl>\n 1 PEIRCE VIEW                        840000 Resale                         7434\n 2 FLORIDA PARK                      3040000 Resale                         9737\n 3 BULLION PARK                       860000 Resale                        11467\n 4 CASTLE GREEN                      1000000 Resale                         9346\n 5 HAPPY ESTATE                      7000000 Resale                        10183\n 6 TEACHER'S HOUSING…                2880000 Resale                        12659\n 7 THE PANORAMA                      1510000 Resale                        16064\n 8 THE PANORAMA                       710000 Resale                        16905\n 9 CHIP THYE GARDEN                  2800000 Resale                        13500\n10 TEACHER'S HOUSING…                2300000 Resale                         9935\n# ℹ 19,505 more rows\n# ℹ 1 more variable: `Property Type` <chr>\n```\n\n\n:::\n:::\n\n\n\n*Take note that only the first ten results of a tibble data frame would be displayed.*\n\n## **Working with filter() of dplyr**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2019_filtered <- realis2019_selected %>%\n  filter(`Property Type` == \"Condominium\" |\n           `Property Type` == \"Apartment\") %>%\n  filter(`Type of Sale` == \"New Sale\") %>%\n  filter(`Unit Price ($ psm)` <= 13000)\n\nrealis2019_filtered\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   <chr>                               <dbl> <chr>                         <dbl>\n 1 RIVERFRONT RESIDE…                1029000 New Sale                      12863\n 2 RIVERFRONT RESIDE…                 871000 New Sale                      12809\n 3 RIVERFRONT RESIDE…                1940000 New Sale                      12848\n 4 RIVERFRONT RESIDE…                1030000 New Sale                      12875\n 5 RIVERFRONT RESIDE…                2061000 New Sale                      12962\n 6 RIVERFRONT RESIDE…                 762000 New Sale                      12915\n 7 RIVERFRONT RESIDE…                1001000 New Sale                      12513\n 8 RIVERFRONT RESIDE…                1271000 New Sale                      12838\n 9 RIVERFRONT RESIDE…                1310000 New Sale                      12970\n10 RIVERFRONT RESIDE…                1339000 New Sale                      13000\n# ℹ 77 more rows\n# ℹ 1 more variable: `Property Type` <chr>\n```\n\n\n:::\n:::\n\n\n\n### Putting It All Together\n\nAlternatively, you can combine the select() and filter() functions together as shown in the code chunk below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2019_filtered2 <- realis2019 %>%\n  select('Project Name',\n         'Transacted Price ($)',\n         'Type of Sale',\n         'Unit Price ($ psm)',\n         'Property Type') %>%\n  filter(`Property Type` == \"Condominium\" |\n           `Property Type` == \"Apartment\") %>%\n  filter(`Type of Sale` == \"New Sale\") %>%\n  filter(`Unit Price ($ psm)` <= 13000)\n\nrealis2019_filtered2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   <chr>                               <dbl> <chr>                         <dbl>\n 1 RIVERFRONT RESIDE…                1029000 New Sale                      12863\n 2 RIVERFRONT RESIDE…                 871000 New Sale                      12809\n 3 RIVERFRONT RESIDE…                1940000 New Sale                      12848\n 4 RIVERFRONT RESIDE…                1030000 New Sale                      12875\n 5 RIVERFRONT RESIDE…                2061000 New Sale                      12962\n 6 RIVERFRONT RESIDE…                 762000 New Sale                      12915\n 7 RIVERFRONT RESIDE…                1001000 New Sale                      12513\n 8 RIVERFRONT RESIDE…                1271000 New Sale                      12838\n 9 RIVERFRONT RESIDE…                1310000 New Sale                      12970\n10 RIVERFRONT RESIDE…                1339000 New Sale                      13000\n# ℹ 77 more rows\n# ℹ 1 more variable: `Property Type` <chr>\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}