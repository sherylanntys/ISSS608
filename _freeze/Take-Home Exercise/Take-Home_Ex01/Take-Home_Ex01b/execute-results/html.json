{
  "hash": "813d899b528605de2c9d14b409e0fe62",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default\"\nauthor: \"Sheryl Ann Tan Yi-Shi\"\ndate: \"2025-02-15\"\ndate-modified: \"last-modified\"\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1.0 Introduction\n\n## 1.1 Background\n\nThe maritime sector is one of the most critical components of global trade, contributing significantly to economic growth and sustainability. Understanding ship performance, fuel efficiency, and operational cost factors are essential for improving decision-making and minimizing environmental impact.\n\n## 1.2 The Task\n\nThis exercise involves assuming the role of a graphical editor at an international media company that regularly publishes content on digital platforms. The company plans to release articles focused on one of the following themes:\n\n-   Heart Attack in Japan\n\n-   Ship Performance in the Gulf of Guinea\n\nThe selected theme for this task is ***Ship Performance in the Gulf of Guinea*** and the objective is to prepare data visualisation for the article.\n\n## 1.3 About the Dataset\n\nThe dataset used in this exercise is sourced from Kaggle. It can be accessed via this [link](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset/data).\n\nThis dataset contains information on key operational metrics and attributes of various ship types in the Gulf of Guinea. The dataset includes numerical (e.g. `speed_over_ground_knots`, `revenue_per_voyage_usd`) and categorical variables (e.g. `ship_type`, `maintenance_status`) relevant to ship performance evaluation.\n\n# 2.0 Data Preparation\n\n## 2.1 Loading R Packages\n\nThe following R packages were used:\n\n| R Package   | Description |\n|-------------|-------------|\n| `dplyr`     |             |\n| `tidyverse` |             |\n| `lubridate` |             |\n|             |             |\n|             |             |\n|             |             |\n|             |             |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggiraph, plotly, gifski, gganimate, ggthemes, ggridges,\n               patchwork, DT, tidyverse, dplyr, lubridate, ggdist) \n```\n:::\n\n\n\n## 2.2 Importing the Data\n\nThe dataset was imported into R using the `read_csv` function from the `readr` package, which is part of the `tidyverse` suite.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- read_csv(\"data/ship_performance_dataset.csv\")\n```\n:::\n\n\n\n## 2.3 Understanding the Data and Data Wrangling\n\nTo gain an initial understanding of the dataset, the following code chunk utilises the `glimpse` function from the `dplyr` package. This function provides a quick overview of the dataset's structure by displaying the first few entries of each column along with their data types.\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(ship_data)\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,736\nColumns: 18\n$ Date                    <date> 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               <chr> \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              <chr> \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             <chr> \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      <chr> \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots <dbl> 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         <dbl> 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    <dbl> 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            <dbl> 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       <chr> \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    <dbl> 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  <dbl> 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   <dbl> 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   <dbl> 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   <dbl> 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     <dbl> 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage <dbl> 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n```\n\n\n:::\n:::\n\n\n:::\n\nBased on the output generated, the dataset consists of 2,736 rows and 18 columns. Based on the **Date** column, it seems that each row represents weekly data of shipping routes.\n\n### 2.3.1 Duplicate and Missing Value Checks\n\n**Duplicate Data Check**\n\nAs duplicates can skew analysis results, identifying and removing them is crucial for subsequent analysis. Thus, a check for duplicate records was done using the `dplyr` package as shown in the code chunk below:\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate_count <- sum(duplicated(ship_data))\ncat(\"Number of duplicate rows:\", duplicate_count, \"\\n\")\n\nif (duplicate_count > 0) {\n  duplicate_rows <- ship_data[duplicated(ship_data), ]\n  print(duplicate_rows)\n} else {\n  cat(\"No duplicate rows found.\\n\")\n}\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of duplicate rows: 0 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNo duplicate rows found.\n```\n\n\n:::\n:::\n\n\n:::\n\nBased on the output, there are no duplicate records in the dataset.\n\n**Missing Value Check**\n\nMissing values in a dataset can introduce bias and affect the accuracy of subsequent analysis, potentially leading to misleading results. The following code chunk counts the number of missing values (`NA)` in the dataset:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_value_count <- sum(rowSums(is.na(ship_data)) > 0)\ncat(\"Number of rows with missing values:\", missing_value_count, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of rows with missing values: 0 \n```\n\n\n:::\n:::\n\n\n\nAlthough the output indicates that there are no missing values (`NA`) in the dataset, a further assessment of categorical columns is required to check for unrecorded data. The following code chunk generates the unique values for each categorical column in the dataset:\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncategorical_columns <- names(ship_data)[sapply(ship_data, is.character)]\n\nfor (col in categorical_columns) {\n  cat(\"\\nUnique values in\", col, \":\\n\")\n  print(unique(ship_data[[col]]))\n}\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\nUnique values in Ship_Type :\n[1] \"Container Ship\" \"Fish Carrier\"   \"Bulk Carrier\"   \"None\"          \n[5] \"Tanker\"        \n\nUnique values in Route_Type :\n[1] \"None\"         \"Short-haul\"   \"Long-haul\"    \"Transoceanic\" \"Coastal\"     \n\nUnique values in Engine_Type :\n[1] \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\"        \"Diesel\"              \n[4] \"None\"                \n\nUnique values in Maintenance_Status :\n[1] \"Critical\" \"Good\"     \"Fair\"     \"None\"    \n\nUnique values in Weather_Condition :\n[1] \"Moderate\" \"Rough\"    \"Calm\"     \"None\"    \n```\n\n\n:::\n:::\n\n\n:::\n\nFrom the results, it was observed that some of the columns containing categorical data contained the value ***None***, which may indicate missing or unrecorded data rather than an actual category. To quantify this, the following code counts the occurrences of ***None*** values in the affected categorical columns:\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncategorical_columns <- names(ship_data)[sapply(ship_data, is.character)]\n\nmissing_categorical_counts <- data.frame(Column = categorical_columns, \n                                         Missing_Count = sapply(ship_data[categorical_columns], function(x) sum(is.na(x) | x == \"None\")))\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n                               Column Missing_Count\nShip_Type                   Ship_Type           136\nRoute_Type                 Route_Type           136\nEngine_Type               Engine_Type           136\nMaintenance_Status Maintenance_Status           136\nWeather_Condition   Weather_Condition           136\n```\n\n\n:::\n:::\n\n\n:::\n\nBased on the results obtained above, each affected column contains 136 ***None*** values, representing approximately 5% of the total observations in the dataset. Since the percentage of missing values is relatively low, records containing ***None*** will be excluded from subsequent analysis.\n\n### 2.3.2 Creating New Variables\n\nThe dataset covers the following time period: 4 June 2023 to 30 June 2024. To facilitate time-based analysis, the dates have been grouped into a new variable called ***Month***, which will represent the month of each record in a `\"MM-YYYY\"` format.\n\nThe following code was used to generate these variables:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data$Month <- format(ship_data$Date, \"%Y-%m\")  \n\nhead(ship_data$Month)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2023-06\" \"2023-06\" \"2023-06\" \"2023-06\" \"2023-07\" \"2023-07\"\n```\n\n\n:::\n:::\n\n\n\n**Profit (USD)**\n\nProfit is a key financial metric that reflects the overall economic performance of a ship's operation. To incorporate profit into the dataset, a new variable was created based on the difference between `Revenue_per_Voyage_USD` and `Operational_Cost_USD`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data$Profit_USD <- ship_data$Revenue_per_Voyage_USD - ship_data$Operational_Cost_USD\n\nsummary(ship_data$Profit_USD)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-444584   40885  262716  266219  492216  977168 \n```\n\n\n:::\n:::\n\n\n\nBased on the summary statistics of the newly created `Profit_USD`, we can observe that some of the ships are loss-making, as shown by the **minimum** value.\n\n### 2.3.3 Data Type Conversion\n\nThe data table below shows the current data type of each of the 19 columns, along with the proposed data type for conversion. To improve data handling and ensure accurate analysis, the proposed data type for each column should align with the nature of the data.\n\n| Variable                | Current Data Type | Proposed Data Type |\n|-------------------------|-------------------|--------------------|\n| Date                    | Date              | Date               |\n| Ship_Type               | Character         | Factor             |\n| Route_Type              | Character         | Factor             |\n| Engine_Type             | Character         | Factor             |\n| Maintenance_Status      | Character         | Ordered Factor     |\n| Speed_Over_Ground_knots | Double            | Double             |\n| Engine_Power_kW         | Double            | Double             |\n| Distance_Traveled_nm    | Double            | Double             |\n| Draft_meters            | Double            | Double             |\n| Weather_Condition       | Character         | Ordered Factor     |\n| Cargo_Weight_tons       | Double            | Double             |\n| Operational_Cost_USD    | Double            | Double             |\n| Revenue_per_Voyage_USD  | Double            | Double             |\n| Turnaround_Time_hours   | Double            | Double             |\n| Efficiency_nm_per_kWh   | Double            | Double             |\n| Seasonal_Impact_Score   | Double            | Double             |\n| Weekly_Voyage_Count     | Double            | Integer            |\n| Average_Load_Percentage | Double            | Double             |\n| Month                   | Character         | Date               |\n| Profit_USD              | Double            | Double             |\n\nThe following code chunk is used to implement the proposed data type conversions:\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data$Ship_Type <- as.factor(ship_data$Ship_Type)\nship_data$Route_Type <- as.factor(ship_data$Route_Type)\nship_data$Engine_Type <- as.factor(ship_data$Engine_Type)\n\nship_data$Maintenance_Status <- factor(ship_data$Maintenance_Status, \n                                       levels = c(\"Critical\", \"Fair\", \"Good\",\"None\"), \n                                       ordered = TRUE)\n\nship_data$Weather_Condition <- factor(ship_data$Weather_Condition, \n                                      levels = c(\"Calm\", \"Moderate\", \"Rough\", \"Severe\",\"None\"), \n                                      ordered = TRUE)\n\nship_data$Month <- as.Date(paste0(ship_data$Month, \"-01\"), format=\"%Y-%m-%d\")\n\nship_data$Weekly_Voyage_Count <- as.integer(ship_data$Weekly_Voyage_Count)\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,736\nColumns: 20\n$ Date                    <date> 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               <fct> Container Ship, Fish Carrier, Container Ship, …\n$ Route_Type              <fct> None, Short-haul, Long-haul, Transoceanic, Tra…\n$ Engine_Type             <fct> Heavy Fuel Oil (HFO), Steam Turbine, Diesel, S…\n$ Maintenance_Status      <ord> Critical, Good, Fair, Fair, Fair, Fair, Critic…\n$ Speed_Over_Ground_knots <dbl> 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         <dbl> 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    <dbl> 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            <dbl> 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       <ord> Moderate, Rough, Moderate, Moderate, Moderate,…\n$ Cargo_Weight_tons       <dbl> 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    <dbl> 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  <dbl> 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   <dbl> 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   <dbl> 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   <dbl> 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     <int> 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage <dbl> 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n$ Month                   <date> 2023-06-01, 2023-06-01, 2023-06-01, 2023-06-0…\n$ Profit_USD              <dbl> -191649.081, 400377.787, -54524.657, -173798.2…\n```\n\n\n:::\n:::\n\n\n:::\n\n# 3.0 Data Visualisation\n\n## 3.1 Financial Metrics\n\n### 3.1.1 Overview of Revenue, Cost and Cargo Weight Trending by Month\n\nThis section provides a time-series analysis of revenue, cost, and cargo weight trends across the observed period to identify key patterns and insights.\n\nThe code chunk below plots a combination of bar and line charts. Cargo weight is represented by a bar chart while revenue and operational costs are illustrated as line plots.\n\n::: panel-tabset\n#### Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonthly_summary <- ship_data %>%\n  group_by(Month) %>%\n  summarise(\n    Total_Revenue = sum(Revenue_per_Voyage_USD, na.rm = TRUE),\n    Total_Cost = sum(Operational_Cost_USD, na.rm = TRUE),\n    Total_Cargo_Weight = sum(Cargo_Weight_tons, na.rm = TRUE)\n  )\n\nmonthly_summary$Month <- as.Date(paste0(monthly_summary$Month, \"-01\"), format=\"%Y-%m-%d\")\n\nmax_revenue <- max(monthly_summary$Total_Revenue/1e6, na.rm = TRUE)\nmax_cargo <- max(monthly_summary$Total_Cargo_Weight/1e6, na.rm = TRUE)\nscaling_factor <- max_revenue / max_cargo  \n\n\nggplot(monthly_summary, aes(x = Month)) +\n  geom_col(aes(y = Total_Cargo_Weight/1e6*scaling_factor, fill = \"Cargo Weight (Million Tons)\"), alpha = 0.6) + \n  geom_line(aes(y = Total_Revenue/1e6, color = \"Revenue (in USD Million)\"), size = 1.2) + \n  geom_line(aes(y = Total_Cost/1e6, color = \"Operational Cost (in USD Million)\"), size = 1.2, linetype = \"dashed\") +\n  scale_y_continuous(\n    name = \"Revenue & Cost (in USD Million)\", \n    labels = scales::dollar_format(suffix = \"M\", prefix = \"\"),\n    sec.axis = sec_axis(~ ./scaling_factor, name = \"Cargo Weight (Million Tons)\")  \n  ) +\n  scale_x_date(\n    date_labels = \"%b %Y\",\n    breaks = seq(min(monthly_summary$Month), max(monthly_summary$Month), by = \"1 month\")\n  ) +\n  labs(\n    title = \"Revenue, Cost, and Cargo Weight by Month\",\n    x = \"Month\",\n    fill = \"Metric\",\n    color = \"Metric\"\n  ) +\n  scale_fill_manual(values = c(\"Cargo Weight (Million Tons)\" = \"lightblue\")) +  \n  scale_color_manual(values = c(\n    \"Revenue (in USD Million)\" = \"black\",\n    \"Operational Cost (in USD Million)\" = \"darkred\"\n  )) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n```\n:::\n\n\n:::\n\n::: {.callout-note icon=\"false\"}\n#### Insights\n\n1.  Revenue consistently exceeds operational costs across all months, indicating that operations remain profitable throughout the observed period.\n\n2.  Revenue, operational costs and cargo weight exhibit similar trends. In months where cargo weight increases, both revenue and costs rise accordingly, and vice versa. This suggests a positive correlation between all three variables.\n\n3.  There is no clear growth trend over the observed period, as fluctuations in cargo weight, revenue, and costs occur over time. Further research could be undertaken to understand if these variations could be attributed to seasonal demand shifts or external factors such as global economic conditions affecting shipping volumes.\n:::\n\n### 3.1.2 Understanding Profitability by Ship Types\n\nIn this section, we will analyze the profitability across different ship types to gain insights into their profitability trends and variability.\n\nThe code chunk below generates three plots to explore the profitability of different ship types. Firstly, the bar chart presents the total profit across ship types, ranking them from highest to lowest profit. Next, the boxplot provides insight into the distribution of profit, highlighting the variability and median values across ship types. Lastly, the ridgeline plot illustrates the profit distribution across ship types. The `patchwork` function is then used to combine these plots together.\n\n::: panel-tabset\n#### Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-18-1.png){width=1152}\n:::\n:::\n\n\n\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_ship_data1 <- ship_data %>% filter(Ship_Type != \"None\")\n\n\n\nmedians <- filtered_ship_data1 %>%\n  group_by(Ship_Type) %>%\n  summarize(Median_Profit = median(Profit_USD/1e6, na.rm = TRUE))\n\nfiltered_ship_data1 <- filtered_ship_data1 %>%\n  left_join(medians, by = \"Ship_Type\")\n\n\n\np1 <- ggplot(data=filtered_ship_data1, aes(y=Profit_USD/1e6, x=reorder(Ship_Type, Median_Profit), fill = Ship_Type)) +\n  geom_boxplot(notch=TRUE, show.legend = FALSE) +\n  geom_text(data = medians,\n            aes(label = sprintf(\"%.2fM\", Median_Profit), y = Median_Profit),\n            nudge_y = 0.1, size = 3.5) +\n  scale_y_continuous(labels = scales::dollar_format(suffix = \"M\", prefix = \"$\"), limits = c(-1.0,1.5)) + \n  labs(\n    title = \"Profit Distribution by Ship Type\",\n    x = NULL,  \n    y = \"Profit (in USD Million)\"\n  ) +\n  coord_flip() +\n  theme_classic() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.title.x = element_blank(),\n    axis.text.y = element_text(size = 12)\n  )\n\n\n\np2 <- ggplot(data = filtered_ship_data1, aes(x = Profit_USD / 1e6, y = reorder(Ship_Type, Median_Profit), fill = Ship_Type)) +\n  geom_density_ridges(aes(group = Ship_Type, fill = Ship_Type), alpha = 0.8, show.legend = FALSE) +\n  scale_x_continuous(labels = scales::dollar_format(suffix = \"M\", prefix = \"$\"), limits = c(-1.0,1.5)) +\n  labs(\n    x = \"Profit (in USD Million)\",\n    y = NULL\n  ) +\n  theme_classic() + \n  theme(\n    axis.text.y = element_text(size = 12)\n  )\n\n\n\nprofit_summary <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%\n  group_by(Ship_Type) %>%\n  summarise(Total_Profit = sum(Profit_USD, na.rm = TRUE)) %>%\n  arrange(desc(Total_Profit)) \n\n\n\np3 <- ggplot(profit_summary, aes(x = reorder(Ship_Type, Total_Profit), y = Total_Profit, fill = Ship_Type)) +\n  geom_col(show.legend = FALSE) + \n  geom_text(aes(label = sprintf(\"%.2fM\", Total_Profit / 1e6)), \n            hjust = 1.5, size = 3.5) +\n  coord_flip() + \n  scale_y_continuous(labels = scales::dollar_format(prefix = \"$\", suffix = \"M\", scale = 1e-6)) +\n  labs(\n    title = \"Total Profit by Ship Type\",\n    x = NULL, \n    y = \"Profit (in USD Million)\"\n  ) +\n  theme_classic() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    plot.margin = margin(10, 40, 10, 10),\n    axis.text.y = element_text(size = 12))\n\n\ncombined_plot <- (p3 | (p1 / p2)) + \n  plot_layout(widths = c(1, 2.5)) +\n  plot_annotation(\n    title = \"Understanding Profitability by Ship Types\",\n    theme = theme(\n      plot.title = element_text(hjust = 0.5, size = 18, face = \"bold\")\n    )\n  )\n\ncombined_plot\n```\n:::\n\n\n:::\n\n::: {.callout-note icon=\"false\"}\n#### Insights\n\n1.  **Fish Carriers** generated the highest total profit while **Tankers** generated the lowest. This pattern is also reflected in median profits, with **Tankers** having the lowest median profit at US\\$0.23M (supported by the peak of the ridgeline plot being closer to zero). Furthermore, the notch of the boxplot for **Tankers** does not overlap with the notches of the other ship types, suggesting that the median profit for **Tankers** is significantly lower.\n\n2.  Although the median profits for **Fish Carriers, Container Ships** and **Bulk Carriers** are similar (indicated by their overlapping boxplot notches), their profit distributions differ:\n\n    \\(a\\) **Bulk Carriers** display a bimodal distribution, indicating two distinct groups - some Bulk Carriers are highly profitable while others operate at lower margins.\n\n    \\(b\\) **Fish Carriers** and **Container Ships** exhibit unimodal distributions. However, **Container Ships** appear to have a higher profit variability as indicated by the greater range and IQR in the boxplot.\n:::\n\n### 3.1.3 Understanding Sales and Profitability by Route Types\n\nIn this section, we will analyse the sales and profitability by route types based on quarterly trends. However, as June 2023 represents an incomplete quarter, we will exclude it from our analysis to ensure consistency in our quarterly comparisons.\n\nThe analysis assumes that the fiscal year starts in July. Hence, we will define the quarters as follows:\n\n-   **Q1** = July 2023 - September 2023\n\n-   **Q2** = October 2023 - December 2023\n\n-   **Q3 =** January 2024 - March 2024\n\n-   **Q4** = April 2024 - June 2024\n\nEach chart is divided into four quadrants:\n\n-   **High Profit, High Sales** (Top Right)\n\n-   **High Profit, Low Sales**(Top Left): This could indicate potential issues with cost management or pricing.\n\n-   **Low Profit, High Sales** (Bottom Right)\n\n-   **Low Profit, Low Sales** (Bottom Left): Potentially requires attention.\n\nThe code chunk below generates a facet gird consisting of bubble charts, with each panel representing a quarterly breakdown of sales and profitability by route type. The bubble size reflects total weekly voyages to further aid in understanding how different route types perform over time.\n\n::: panel-tabset\n#### Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroute_summary <- ship_data %>%\n  filter(Route_Type != \"None\") %>%  # Exclude Route_Type = \"None\"\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(Quarter = case_when(\n    month(Month) %in% 7:9  ~ \"Q1\",  # July - September\n    month(Month) %in% 10:12 ~ \"Q2\", # October - December\n    month(Month) %in% 1:3  ~ \"Q3\",  # January - March\n    month(Month) %in% 4:6  ~ \"Q4\"   # April - June\n  )) %>%\n  filter(!is.na(Quarter)) %>% \n  group_by(Quarter, Route_Type) %>%\n  summarise(\n    Total_Sales = sum(Revenue_per_Voyage_USD, na.rm = TRUE),\n    Total_Profit = sum(Profit_USD, na.rm = TRUE),\n    Total_Weekly_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE) \n  ) %>%\n  mutate(\n    Sales_Percentile = percent_rank(Total_Sales), \n    Profit_Percentile = percent_rank(Total_Profit)\n  )\n\n\nggplot(route_summary, aes(x = Sales_Percentile, y = Profit_Percentile, \n                          size = Total_Weekly_Voyages, color = Route_Type)) +\n  geom_point(alpha = 0.7) + \n  geom_hline(yintercept = 0.5, linetype = \"dashed\", color = \"black\") +\n  geom_vline(xintercept = 0.5, linetype = \"dashed\", color = \"black\") +  \n  scale_size(range = c(3, 15), name = \"Total Weekly Voyages\") + \n  scale_x_continuous(labels = scales::percent_format()) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(\n    title = \"Sales and Profit by Route Types\",\n    x = \"Sales Percentile\",\n    y = \"Profit Percentile\",\n    color = \"Route Type\",\n    size = \"Total Weekly Voyages\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"right\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2)\n```\n:::\n\n\n:::\n\n::: {.callout-note icon=\"false\"}\n#### Insights\n\n1.  With the exception of Q2, **Long-Haul Routes** predominantly occupy the top-right quadrant, indicating strong performance in both sales and profit across most quarters.\n\n2.  **Coastal Routes** consistently rank above 50th percentile in profitability across all quarters, suggesting their high-margin nature. However, their sales performance fluctuates.\n\n3.  **Transoceanic Routes** consistently rank below the 50th percentile in profitability across all quarters. In terms of sales, they exhibit the lowest sales in Q1 and Q2 but show improvements in Q3 and Q4. They ranked the lowest in terms of profitability and sales in Q1 and Q2.\n\n4.  With the exception of Q2, **Short-Haul** **Routes** exhibit both low profitability and sales in Q3 and Q4 (replacing Transoceanic Routes), thus positioning it as an under-performing route. In addition, they record the lowest number of voyages in Q3.\n:::\n\n## 3.2 Operational Metrics\n\n### 3.2.1 Understanding Average Load Percentage by Ship Types Across Route Types\n\nThis section examines the distribution of average load percentage across different ship types and routes types. By visualising the density distribution of load percentage, this section aims to understand how efficiently different ship types utilise their cargo capacity on various routes.\n\nThe code chunk below plots the density distributions of average load percentage for different ship types across route types using `geom_density`. A reference line representing the median load percentage for each route type is added to provide a benchmark for further interpretation.\n\n::: panel-tabset\n#### Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data2 <- ship_data %>%\n  filter(Ship_Type != \"None\", Route_Type != \"None\")\n\nmedian_values <- filtered_data2 %>%\n  group_by(Route_Type) %>%\n  summarise(Median_Load = median(Average_Load_Percentage, na.rm = TRUE), .groups = \"drop\")\n\n\nggplot(filtered_data2, aes(x = Average_Load_Percentage, color = Ship_Type)) +\n  geom_density(alpha = 0.7) +  \n  geom_vline(data = median_values, aes(xintercept = Median_Load), \n             linetype = \"dashed\", size = 0.5, color = \"black\") +\n  geom_text(data = median_values, \n            aes(x = Median_Load, y = 0, \n                label = sprintf(\"Median: %.1f%%\", Median_Load)), \n            hjust = 1.1, vjust = -1.5, size = 2.5, color = \"black\") + \n  labs(\n    title = \"Average Load Percentage by Ship Types Across Routes\",\n    x = \"Average Load Percentage (%)\",\n    y = \"Density\",\n    color = \"Ship Type\"\n  ) +\n  facet_wrap(~ Route_Type, ncol = 2) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n:::\n\n\n:::\n\n::: {.callout-note icon=\"false\"}\n#### Insights\n\n1.  **Coastal Routes**: **Tankers** exhibit a left-skewed distribution, with a distinct peak in the 90% - 95% range, indicating a higher frequency of tankers operating at high load capacities. In contrast, other ship types demonstrate a more uniform distribution.\n\n2.  **Long-Haul Routes**: All ship types exhibit a relatively uniform distribution.\n\n3.  **Short-Haul Routes**: **Container Ships** exhibit a right-skewed distribution, with a peak in the 60% - 65% range, indicating a higher frequency of container ships operating with lower load capacities. In contrast, both **Bulk Carriers** and **Tankers** exhibit a left-skew distribution, suggesting a tendency toward higher load capacities.\n\n4.  **Transoceanic Routes**: Most ship types exhibit a relatively uniform distribution, except for **Bulk Carriers**, which display a distinct peak in the 80% - 85% range. This indicates a higher concentration of bulk carriers operating within this load percentage.\n:::\n\n## 3.5 Shipping Volumes by Route Types\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- ship_data %>%\n  filter(Route_Type != \"None\") %>%\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Summarize Data: Total Weekly Voyages and Cargo Weight per Route Type per Quarter\nsummary_data <- filtered_data %>%\n  group_by(Quarter, Route_Type) %>%\n  summarise(\n    Total_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    Total_Cargo_Weight = sum(Cargo_Weight_tons, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Define Scaling Factor for Secondary Axis\nscaling_factor <- max(summary_data$Total_Voyages, na.rm = TRUE) / \n                  max(summary_data$Total_Cargo_Weight, na.rm = TRUE)\n\n# Plot: Bar Chart (Voyages) + Line Chart (Cargo Weight) with 2x2 Facet by Quarter\nggplot(summary_data, aes(x = Route_Type)) +\n  geom_col(aes(y = Total_Voyages, fill = \"Total Voyages\"), alpha = 0.7) +  # Bar chart\n  geom_line(aes(y = Total_Cargo_Weight * scaling_factor, group = 1, color = \"Total Cargo Weight\"), size = 1.2) +  # Line chart\n  geom_point(aes(y = Total_Cargo_Weight * scaling_factor, color = \"Total Cargo Weight\"), size = 3) +  # Points for line chart\n  scale_y_continuous(\n    name = \"Total Voyages\",\n    labels = scales::comma_format(),\n    sec.axis = sec_axis(~ . / scaling_factor, name = \"Total Cargo Weight (tons)\")\n  ) +\n  scale_fill_manual(values = c(\"Total Voyages\" = \"lightblue\")) +  # Bar color\n  scale_color_manual(values = c(\"Total Cargo Weight\" = \"black\")) +  # Line color\n  labs(\n    title = \"Total Voyages and Cargo Weight by Route Type (Faceted by Quarter)\",\n    x = \"Route Type\",\n    fill = \"Metric\",\n    color = \"Metric\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n## 3.4 Maintenance Status by Ship Types\n\n::: panel-tabset\n#### Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter out Ship_Type = \"None\" and Maintenance_Status = \"None\"\nfiltered_ship_data2 <- ship_data %>%\n  filter(Ship_Type != \"None\", Maintenance_Status != \"None\")\n\n# Create stacked bar chart with Brewer Palette\nggplot(filtered_ship_data2, aes(x = Ship_Type, fill = Maintenance_Status)) +\n  geom_bar(position = \"fill\", color=\"black\") +  # Stacked proportionally\n  scale_y_continuous(labels = scales::percent_format()) +  # Convert to percentage\n  scale_fill_brewer(palette = \"Pastel1\") +  # Change color palette\n  labs(\n    title = \"Maintenance Status by Ship Type\",\n    x = \"Ship Type\",\n    y = \"Percentage\",\n    fill = \"Maintenance Status\"\n  ) +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::: {.callout-note icon=\"false\"}\n#### Insights\n\n\\[WRITE INSIGHTS HEREEEE\\]\n:::\n\n# 4.0 OTHERSS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Summarize Data by Route Type\nsummary_data <- ship_data %>%\n  filter(Route_Type != \"None\") %>%\n  group_by(Route_Type) %>%\n  summarise(\n    Total_Weekly_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    Avg_Cargo_Weight_per_Voyage = mean(Cargo_Weight_tons / Weekly_Voyage_Count, na.rm = TRUE)\n  )\n\n# Define Scaling Factor for Secondary Axis\nscaling_factor <- max(summary_data$Total_Weekly_Voyages, na.rm = TRUE) / \n                  max(summary_data$Avg_Cargo_Weight_per_Voyage, na.rm = TRUE)\n\n# Plot: Bar Chart (Weekly Voyages) + Line Chart (Average Cargo Weight per Voyage)\nggplot(summary_data, aes(x = Route_Type)) +\n  geom_col(aes(y = Total_Weekly_Voyages, fill = \"Total Weekly Voyages\"), alpha = 0.7) +  # Bar chart\n  geom_line(aes(y = Avg_Cargo_Weight_per_Voyage * scaling_factor, group = 1, color = \"Avg Cargo Weight per Voyage\"), size = 1.2) +  # Line chart\n  geom_point(aes(y = Avg_Cargo_Weight_per_Voyage * scaling_factor, color = \"Avg Cargo Weight per Voyage\"), size = 3) +  # Line chart points\n  scale_y_continuous(\n    name = \"Total Number of Voyages\",\n    labels = scales::comma_format(),\n    sec.axis = sec_axis(~ . / scaling_factor, name = \"Avg Cargo Weight per Voyage (tons)\")\n  ) +\n  scale_fill_manual(values = c(\"Total Weekly Voyages\" = \"lightblue\")) +  # Bar color\n  scale_color_manual(values = c(\"Avg Cargo Weight per Voyage\" = \"black\")) +  # Line color\n  labs(\n    title = \"Weekly Voyages and Average Cargo Weight per Voyage by Route Type\",\n    x = \"Route Type\",\n    fill = \"Metric\",\n    color = \"Metric\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Route Type and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Route_Type != \"None\") %>%\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(Quarter = case_when(\n    month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n    month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n    month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n    month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n  )) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Calculate Median Cargo Weight for Each Route Type and Quarter\nmedians <- filtered_data %>%\n  group_by(Route_Type, Quarter) %>%\n  summarise(Median_Cargo_Weight = median(Cargo_Weight_tons, na.rm = TRUE), .groups = 'drop')\n\n# Boxplot: Cargo Weight by Route Type, Faceted by Quarter (2x2 Grid) with Median Labels\nggplot(filtered_data, aes(x = Route_Type, y = Cargo_Weight_tons, fill = Route_Type)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot with transparency\n  geom_text(data = medians, aes(label = paste0(round(Median_Cargo_Weight, 1)), y = Median_Cargo_Weight),\n            color = \"black\", size = 3, hjust = -0.2) +  # Add median labels\n  scale_y_continuous(labels = scales::comma_format()) +  # Format y-axis with commas\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Cargo Weight Distribution by Route Type (Faceted by Quarter)\",\n    x = \"Route Type\",\n    y = \"Cargo Weight (tons)\",\n    fill = \"Route Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # 2x2 Grid Facet Layout\n  coord_flip() +  # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggridges)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Route Type and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Route_Type != \"None\") %>%\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(Quarter = case_when(\n    month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n    month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n    month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n    month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n  )) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Ridgeline Plot: Cargo Weight by Route Type, Faceted by Quarter (2x2 Grid)\nggplot(filtered_data, aes(x = Cargo_Weight_tons, y = Route_Type, fill = Route_Type)) +\n  geom_density_ridges(alpha = 0.7, scale = 1.2, rel_min_height = 0.01) +  # Ridgeline Plot\n  scale_x_continuous(labels = scales::comma_format()) +  # Format x-axis with commas\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Cargo Weight Distribution by Route Type (Ridgeline Plot Faceted by Quarter)\",\n    x = \"Cargo Weight (tons)\",\n    y = \"Route Type\",\n    fill = \"Route Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # 2x2 Grid Facet Layout\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Route Type and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Route_Type != \"None\", Weekly_Voyage_Count > 0) %>%  # Ensure no division by zero\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Avg_Cargo_Weight_per_Voyage = Cargo_Weight_tons / Weekly_Voyage_Count,  # New column\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Boxplot: Avg Cargo Weight per Weekly Voyage by Route Type, Faceted by Quarter (2x2 Grid)\nggplot(filtered_data, aes(x = Route_Type, y = Avg_Cargo_Weight_per_Voyage, fill = Route_Type)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot with transparency\n  scale_y_continuous(labels = scales::comma_format()) +  # Format y-axis with commas\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Average Cargo Weight per Weekly Voyage by Route Type (Faceted by Quarter)\",\n    x = \"Route Type\",\n    y = \"Avg Cargo Weight per Voyage (tons)\",\n    fill = \"Route Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # 2x2 Grid Facet Layout\n  coord_flip() +  # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Ship Type and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Summarize Data: Total Weekly Voyages and Cargo Weight per Ship Type per Quarter\nsummary_data <- filtered_data %>%\n  group_by(Quarter, Ship_Type) %>%\n  summarise(\n    Total_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    Total_Cargo_Weight = sum(Cargo_Weight_tons, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Define Scaling Factor for Secondary Axis\nscaling_factor <- max(summary_data$Total_Voyages, na.rm = TRUE) / \n                  max(summary_data$Total_Cargo_Weight, na.rm = TRUE)\n\n# Plot: Bar Chart (Voyages) + Line Chart (Cargo Weight) with 2x2 Facet by Quarter\nggplot(summary_data, aes(x = Ship_Type)) +\n  geom_col(aes(y = Total_Voyages, fill = \"Total Voyages\"), alpha = 0.7) +  # Bar chart\n  geom_line(aes(y = Total_Cargo_Weight * scaling_factor, group = 1, color = \"Total Cargo Weight\"), size = 1.2) +  # Line chart\n  geom_point(aes(y = Total_Cargo_Weight * scaling_factor, color = \"Total Cargo Weight\"), size = 3) +  # Points for line chart\n  scale_y_continuous(\n    name = \"Total Voyages\",\n    labels = scales::comma_format(),\n    sec.axis = sec_axis(~ . / scaling_factor, name = \"Total Cargo Weight (tons)\")\n  ) +\n  scale_fill_manual(values = c(\"Total Voyages\" = \"lightblue\")) +  # Bar color\n  scale_color_manual(values = c(\"Total Cargo Weight\" = \"black\")) +  # Line color\n  labs(\n    title = \"Total Voyages and Cargo Weight by Ship Type (Faceted by Quarter)\",\n    x = \"Ship Type\",\n    fill = \"Metric\",\n    color = \"Metric\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # 2x2 Grid Facet Layout\n  # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Prepare Data: Exclude \"None\" Ship Type\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\")\n\n# Plot: Boxplot of Turnaround Time by Ship Type\nggplot(filtered_data, aes(x = Ship_Type, y = Turnaround_Time_hours, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot with transparency\n  scale_y_continuous(labels = scales::comma_format()) +  # Format y-axis for clarity\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Turnaround Time Distribution by Ship Type\",\n    x = \"Ship Type\",\n    y = \"Turnaround Time (Hours)\",\n    fill = \"Ship Type\"\n  ) +\n  coord_flip() +  # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Prepare Data: Exclude \"None\" Ship Type and Route Type\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\", Route_Type != \"None\")\n\n# Plot: Boxplot of Turnaround Time by Ship Type, Faceted by Route Type\nggplot(filtered_data, aes(x = Ship_Type, y = Turnaround_Time_hours, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot with transparency\n  scale_y_continuous(labels = scales::comma_format()) +  # Format y-axis for clarity\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Turnaround Time Distribution by Ship Type (Faceted by Route Type)\",\n    x = \"Ship Type\",\n    y = \"Turnaround Time (Hours)\",\n    fill = \"Ship Type\"\n  ) +\n  facet_wrap(~ Route_Type, ncol = 2) +  # 2x2 Facet Grid Layout\n  coord_flip() +  # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Prepare Data: Exclude \"None\" Ship Type and Route Type\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\", Route_Type != \"None\")\n\n# Plot: Boxplot of Turnaround Time by Ship Type, Faceted by Route Type\nggplot(filtered_data, aes(x = Ship_Type, y = Efficiency_nm_per_kWh, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot with transparency\n  scale_y_continuous(labels = scales::comma_format()) +  # Format y-axis for clarity\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Turnaround Time Distribution by Ship Type (Faceted by Route Type)\",\n    x = \"Ship Type\",\n    y = \"Turnaround Time (Hours)\",\n    fill = \"Ship Type\"\n  ) +\n  facet_wrap(~ Route_Type, ncol = 2) +  # 2x2 Facet Grid Layout\n  coord_flip() +  # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Weather Condition and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Weather_Condition != \"None\") %>%\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Summarize Data: Total Weekly Voyages per Weather Condition per Quarter\nsummary_data <- filtered_data %>%\n  group_by(Quarter, Weather_Condition) %>%\n  summarise(\n    Total_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Define Scaling Factor for Secondary Axis\nscaling_factor <- max(summary_data$Total_Voyages, na.rm = TRUE) / \n                  max(table(filtered_data$Weather_Condition), na.rm = TRUE)\n\n# Plot: Bar Chart (Weather Condition) + Line Chart (Total Weekly Voyages) with 2x2 Facet by Quarter\nggplot(summary_data, aes(x = Weather_Condition)) +\n  geom_col(aes(y = Total_Voyages, fill = \"Total Voyages\"), alpha = 0.7) +  # Bar chart\n  geom_line(aes(y = Total_Voyages * scaling_factor, group = 1, color = \"Total Weekly Voyages\"), size = 1.2) +  # Line chart\n  geom_point(aes(y = Total_Voyages * scaling_factor, color = \"Total Weekly Voyages\"), size = 3) +  # Line chart points\n  scale_y_continuous(\n    name = \"Total Voyages\",\n    labels = scales::comma_format(),\n    sec.axis = sec_axis(~ . / scaling_factor, name = \"Weather Condition Frequency\")\n  ) +\n  scale_fill_manual(values = c(\"Total Voyages\" = \"lightblue\")) +  # Bar color\n  scale_color_manual(values = c(\"Total Weekly Voyages\" = \"black\")) +  # Line color\n  labs(\n    title = \"Weather Condition and Total Voyages by Quarter\",\n    x = \"Weather Condition\",\n    fill = \"Metric\",\n    color = \"Metric\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) + # Flip for better readability\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Ship Type and Drop June 2023\nship_summary <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%  # Exclude Ship_Type = \"None\"\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter)) %>% \n\n  # Summarize Data by Ship Type per Quarter\n  group_by(Quarter, Ship_Type) %>%\n  summarise(\n    Total_Sales = sum(Revenue_per_Voyage_USD, na.rm = TRUE),\n    Total_Profit = sum(Profit_USD, na.rm = TRUE),\n    Total_Weekly_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  \n  # Compute Percentile Ranks for Sales & Profit\n  mutate(\n    Sales_Percentile = percent_rank(Total_Sales), \n    Profit_Percentile = percent_rank(Total_Profit)\n  )\n\n# Plot: Bubble Chart of Ship Types by Sales & Profit Percentiles, Faceted by Quarter\nggplot(ship_summary, aes(x = Sales_Percentile, y = Profit_Percentile, \n                          size = Total_Weekly_Voyages, color = Ship_Type)) +\n  geom_point(alpha = 0.7) +  # Bubble Plot\n  geom_hline(yintercept = 0.5, linetype = \"dashed\", color = \"black\") +  # Reference Line at 50% Sales\n  geom_vline(xintercept = 0.5, linetype = \"dashed\", color = \"black\") +  # Reference Line at 50% Profit\n  scale_size(range = c(3, 15), name = \"Total Weekly Voyages\") +  # Scale bubble size\n  scale_x_continuous(labels = scales::percent_format()) +  # Format x-axis\n  scale_y_continuous(labels = scales::percent_format()) +  # Format y-axis\n  labs(\n    title = \"Sales and Profit by Ship Types\",\n    x = \"Sales Percentile\",\n    y = \"Profit Percentile\",\n    color = \"Ship Type\",\n    size = \"Total Weekly Voyages\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"right\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2)  # 2x2 Grid Facet by Quarter\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Ship Type and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%  # Exclude Ship_Type = \"None\"\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Plot: Boxplot of Efficiency by Ship Type, Faceted by Quarter\nggplot(filtered_data, aes(x = Ship_Type, y = Efficiency_nm_per_kWh, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot with transparency\n  scale_y_continuous(labels = scales::comma_format()) +  # Format y-axis for clarity\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Efficiency by Ship Type (Faceted by Quarter)\",\n    x = \"Ship Type\",\n    y = \"Efficiency (Nautical Miles per kWh)\",\n    fill = \"Ship Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # 2x2 Grid Facet by Quarter\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Ship Type and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%  # Exclude Ship_Type = \"None\"\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Plot: Boxplot of Average Load Percentage by Ship Type, Faceted by Quarter\nggplot(filtered_data, aes(x = Ship_Type, y = Average_Load_Percentage, fill = Ship_Type)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot with transparency\n  scale_y_continuous(labels = scales::percent_format()) +  # Format y-axis as percentage\n  scale_fill_brewer(palette = \"Set2\") +  # Use a nice color palette\n  labs(\n    title = \"Average Load Percentage by Ship Type (Faceted by Quarter)\",\n    x = \"Ship Type\",\n    y = \"Average Load Percentage\",\n    fill = \"Ship Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # 2x2 Grid Facet by Quarter\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Weather Condition and Drop June 2023\nfiltered_data <- ship_data %>%\n  filter(Weather_Condition != \"None\", Ship_Type != \"None\") %>%  # Remove \"None\" values\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  # Q1: July - September\n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", # Q2: October - December\n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  # Q3: January - March\n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"   # Q4: April - June\n    )\n  ) %>%\n  filter(!is.na(Quarter))  # Ensure valid quarter data\n\n# Summarize Data: Total Weekly Voyages per Weather Condition per Ship Type per Quarter\nsummary_data <- filtered_data %>%\n  group_by(Quarter, Weather_Condition, Ship_Type) %>%\n  summarise(\n    Total_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Plot: Stacked Bar Chart (Weather Condition) with Ship Type + Facet Grid by Quarter\nggplot(summary_data, aes(x = Weather_Condition, y = Total_Voyages, fill = Ship_Type)) +\n  geom_bar(stat = \"identity\", position = \"fill\") +  # Stacked proportionally\n  scale_y_continuous(labels = scales::percent_format()) +  # Convert to percentage\n  scale_fill_brewer(palette = \"Set2\") +  # Color palette for ship types\n  labs(\n    title = \"Distribution of Ship Types by Weather Condition (Faceted by Quarter)\",\n    x = \"Weather Condition\",\n    y = \"Percentage of Total Voyages\",\n    fill = \"Ship Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # 2x2 Grid Facet by Quarter\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Prepare Data: Exclude \"None\" Ship Type\nsummary_data <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%\n  group_by(Ship_Type) %>%\n  summarise(\n    Avg_Cargo_Weight_per_Voyage = mean(Cargo_Weight_tons / Weekly_Voyage_Count, na.rm = TRUE),\n    Avg_Load_Efficiency = mean(Efficiency_nm_per_kWh, na.rm = TRUE),\n    Total_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Plot: Scatter Plot (Avg Cargo Weight per Voyage vs Avg Load Efficiency)\nggplot(summary_data, aes(x = Avg_Cargo_Weight_per_Voyage, \n                         y = Avg_Load_Efficiency, \n                         size = Total_Voyages, \n                         color = Ship_Type)) +\n  geom_point(alpha = 0.7) +  # Scatter plot\n  scale_size(range = c(3, 15), name = \"Total Voyages\") +  \n  labs(\n    title = \"Average Cargo Weight per Voyage vs Load Efficiency (Faceted by Ship Type)\",\n    x = \"Average Cargo Weight per Voyage (tons)\",\n    y = \"Average Load Efficiency (nm/kWh)\",\n    color = \"Ship Type\"\n  ) +\n  facet_wrap(~ Ship_Type, ncol = 2) +  # Facet by Ship Type\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Prepare Data: Exclude \"None\" Ship Type\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%\n  mutate(\n    Avg_Cargo_Weight_per_Voyage = Cargo_Weight_tons / Weekly_Voyage_Count\n  )\n\n# Plot: Scatter Plot (Avg Cargo Weight per Voyage vs Avg Load Efficiency)\nggplot(filtered_data, aes(x = Avg_Cargo_Weight_per_Voyage, \n                          y = Efficiency_nm_per_kWh, \n                          color = Ship_Type)) +\n  geom_point(alpha = 0.6) +  # Scatter plot\n  labs(\n    title = \"Average Cargo Weight per Voyage vs Load Efficiency (Faceted by Ship Type)\",\n    x = \"Average Cargo Weight per Voyage (tons)\",\n    y = \"Load Efficiency (nm/kWh)\",\n    color = \"Ship Type\"\n  ) +\n  facet_wrap(~ Ship_Type, ncol = 2) +  # Facet by Ship Type\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Ship Type and Assign Quarters\nsummary_data <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  \n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", \n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  \n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"\n    )\n  ) %>%\n  filter(!is.na(Quarter)) %>%  # Ensure valid quarter data\n  group_by(Quarter, Ship_Type) %>%\n  summarise(\n    Avg_Cargo_Weight_per_Voyage = mean(Cargo_Weight_tons / Weekly_Voyage_Count, na.rm = TRUE),\n    Avg_Load_Efficiency = mean(Efficiency_nm_per_kWh, na.rm = TRUE),\n    Total_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Plot: Scatter Plot (Faceted by Quarter, Colored by Ship Type)\nggplot(summary_data, aes(x = Avg_Cargo_Weight_per_Voyage, \n                         y = Avg_Load_Efficiency, \n                         size = Total_Voyages, \n                         color = Ship_Type)) +\n  geom_point(alpha = 0.7) +  # Bubble plot\n  scale_size(range = c(3, 15), name = \"Total Voyages\") +  \n  labs(\n    title = \"Average Cargo Weight per Voyage vs Load Efficiency (Faceted by Quarter)\",\n    x = \"Average Cargo Weight per Voyage (tons)\",\n    y = \"Average Load Efficiency (nm/kWh)\",\n    color = \"Ship Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # Facet by Quarter\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Prepare Data: Exclude \"None\" Route Type and Ship Type\nfiltered_data <- ship_data %>%\n  filter(Ship_Type != \"None\", Route_Type != \"None\") %>%\n  mutate(\n    Avg_Cargo_Weight_per_Voyage = Cargo_Weight_tons / Weekly_Voyage_Count\n  )\n\n# Plot: Scatter Plot (Avg Cargo Weight per Voyage vs Avg Load Efficiency)\nggplot(filtered_data, aes(x = Avg_Cargo_Weight_per_Voyage, \n                          y = Efficiency_nm_per_kWh, \n                          color = Ship_Type)) +\n  geom_point(alpha = 0.6) +  # Scatter plot\n  labs(\n    title = \"Average Cargo Weight per Voyage vs Load Efficiency (Faceted by Route Type)\",\n    x = \"Average Cargo Weight per Voyage (tons)\",\n    y = \"Load Efficiency (nm/kWh)\",\n    color = \"Ship Type\"\n  ) +\n  facet_wrap(~ Route_Type, ncol = 2) +  # Facet by Route Type\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filtered_data, aes(x = Avg_Cargo_Weight_per_Voyage, \n                          y = Efficiency_nm_per_kWh)) +\n  geom_bin2d(bins = 30) +  \n  scale_fill_viridis_c() +  \n  labs(\n    title = \"Heatmap: Cargo Weight per Voyage vs Load Efficiency\",\n    x = \"Avg Cargo Weight per Voyage (tons)\",\n    y = \"Load Efficiency (nm/kWh)\",\n    fill = \"Count\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggridges)\n\nggplot(filtered_data, aes(x = Efficiency_nm_per_kWh, \n                          y = Route_Type, \n                          fill = Route_Type)) +\n  geom_density_ridges(alpha = 0.7) +\n  labs(\n    title = \"Ridgeline Plot: Load Efficiency by Route Type\",\n    x = \"Load Efficiency (nm/kWh)\",\n    y = \"Route Type\",\n    fill = \"Route Type\"\n  ) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Ship Type and Assign Quarters\nsummary_data <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  mutate(\n    Quarter = case_when(\n      month(Month) %in% 7:9  ~ \"Q1 (Jul-Sep)\",  \n      month(Month) %in% 10:12 ~ \"Q2 (Oct-Dec)\", \n      month(Month) %in% 1:3  ~ \"Q3 (Jan-Mar)\",  \n      month(Month) %in% 4:6  ~ \"Q4 (Apr-Jun)\"\n    )\n  ) %>%\n  filter(!is.na(Quarter)) %>%\n  group_by(Quarter, Ship_Type) %>%\n  summarise(\n    Avg_Cargo_Weight_per_Voyage = mean(Cargo_Weight_tons / Weekly_Voyage_Count, na.rm = TRUE),\n    Avg_Load_Percentage = mean(Average_Load_Percentage, na.rm = TRUE),\n    Total_Voyages = sum(Weekly_Voyage_Count, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    Cargo_Weight_Percentile = percent_rank(Avg_Cargo_Weight_per_Voyage),\n    Load_Percentage_Percentile = percent_rank(Avg_Load_Percentage)\n  )\n\n# Plot: Scatter Plot (Faceted by Quarter, Colored by Ship Type)\nggplot(summary_data, aes(x = Cargo_Weight_Percentile, \n                         y = Load_Percentage_Percentile, \n                         size = Total_Voyages, \n                         color = Ship_Type)) +\n  geom_point(alpha = 0.7) +  # Bubble plot\n  geom_hline(yintercept = 0.5, linetype = \"dotted\", color = \"black\") +  # 50% Reference Line for y-axis\n  geom_vline(xintercept = 0.5, linetype = \"dotted\", color = \"black\") +  # 50% Reference Line for x-axis\n  scale_size(range = c(3, 15), name = \"Total Voyages\") +  \n  scale_x_continuous(labels = scales::percent_format()) + \n  scale_y_continuous(labels = scales::percent_format()) + \n  labs(\n    title = \"Percentile of Cargo Weight per Voyage vs Load Percentage (Faceted by Quarter)\",\n    x = \"Cargo Weight Percentile\",\n    y = \"Load Percentage Percentile\",\n    color = \"Ship Type\"\n  ) +\n  facet_wrap(~ Quarter, ncol = 2) +  # Facet by Quarter\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"top\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lubridate)\n\n# Prepare Data: Exclude \"None\" Weather Condition and Summarize Profit by Month\nsummary_data <- ship_data %>%\n  filter(Weather_Condition != \"None\") %>%  # Exclude \"None\" weather conditions\n  filter(!(year(Month) == 2023 & month(Month) == 6)) %>%  # Exclude June 2023\n  group_by(Month, Weather_Condition) %>%\n  summarise(Total_Profit = sum(Profit_USD, na.rm = TRUE) / 1e6, .groups = \"drop\")  # Convert to million USD\n\n# Compute Average Profit for Each Weather Condition\navg_profit_by_weather <- summary_data %>%\n  group_by(Weather_Condition) %>%\n  summarise(Avg_Profit = mean(Total_Profit, na.rm = TRUE), .groups = \"drop\")\n\n# Merge with summary_data for Reference Line\nsummary_data <- left_join(summary_data, avg_profit_by_weather, by = \"Weather_Condition\")\n\n# Plot: Sum of Monthly Profits, Faceted by Weather Condition\nggplot(summary_data, aes(x = Month, y = Total_Profit, fill = Weather_Condition)) +\n  geom_col(alpha = 0.8, show.legend = FALSE) +  \n  geom_hline(aes(yintercept = Avg_Profit), linetype = \"dashed\", color = \"black\", size = 0.8) +  # Reference Line per Weather Condition\n  geom_text(aes(x = min(Month), y = Avg_Profit, label = sprintf(\"Avg: %.2fM\", Avg_Profit)), \n            hjust = 0, vjust = -1, size = 4, color = \"black\") +  # Add labels for avg profit per weather condition\n  labs(\n    title = \"Total Monthly Profits by Weather Condition\",\n    x = \"Month\",\n    y = \"Total Profit (Million USD)\"\n  ) +\n  facet_grid(rows = vars(Weather_Condition), scales = \"free_y\") +  # 3x1 facet grid by Weather Condition\n  scale_x_date(date_labels = \"%b %Y\", breaks = \"1 month\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Filter out \"None\" weather conditions\nfiltered_data <- ship_data %>%\n  filter(Weather_Condition != \"None\")\n\n# Create the boxplot\nggplot(filtered_data, aes(x = Weather_Condition, y = Profit_USD, fill = Weather_Condition)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) +\n  stat_summary(fun = median, geom = \"point\", shape = 23, size = 3, fill = \"black\") + \n  labs(\n    title = \"Profit Distribution by Weather Condition\",\n    x = \"Weather Condition\",\n    y = \"Profit (USD)\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Summarize total profit by ship type, excluding \"None\"\nprofit_summary <- ship_data %>%\n  filter(Ship_Type != \"None\") %>%\n  group_by(Ship_Type) %>%\n  summarise(Total_Profit = sum(Profit_USD, na.rm = TRUE)) %>%\n  arrange(desc(Total_Profit))  # Sort from largest to smallest profit\n\n# Plot horizontal bar chart\nggplot(profit_summary, aes(x = reorder(Ship_Type, Total_Profit), y = Total_Profit, fill = Ship_Type)) +\n  geom_col(show.legend = FALSE) +  # Bar chart\n  coord_flip() +  # Horizontal orientation\n  scale_y_continuous(labels = scales::dollar_format(prefix = \"$\", suffix = \"M\", scale = 1e-6)) +  # Convert to Million USD\n  labs(\n    title = \"Total Profit by Ship Type\",\n    x = \"Ship Type\",\n    y = \"Total Profit (in Million USD)\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01b_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "Take-Home_Ex01b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}