{
  "hash": "fb3066e90f4c933ea40dfe4e19cd6ed6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default\"\nauthor: \"Sheryl Ann Tan Yi-Shi\"\ndate: \"2025-02-15\"\ndate-modified: \"last-modified\"\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1.0 Introduction\n\n## 1.1 Background\n\nCardiovascular diseases, including heart attacks, are a leading cause of mortality worldwide. In recent years, Japan has experienced a steady increase in heart disease-related mortality, largely driven by its aging population, thus making it a growing public health concern (Ohira et al., 2023).\n\n## 1.2 The Task\n\nThis exercise involves assuming the role of a graphical editor at an international media company that regularly publishes content on digital platforms. The company plans to release articles focused on one of the following themes:\n\n-   Heart Attack in Japan\n\n-   Ship Performance in the Gulf of Guinea\n\nFor the purposes of this take-home exercise, the theme, ***Heart Attack in Japan***, was selected for the preparation of data visualizations for the article.\n\n## 1.3 About the Dataset\n\nThe dataset used in this exercise is sourced from Kaggle and can be accessed via this [link](https://www.kaggle.com/datasets/ashaychoudhary/heart-attack-in-japan-youth-vs-adult).\n\nThis dataset provides the opportunity to perform a comprehensive analysis of heart attack incidents in Japan as it includes a range of features such as:\n\n-   **Age and Demographics** including gender and region.\n\n-   **Medical Indicators** including cholesterol level, heart rate, systolic blood pressure, and diastolic blood pressure.\n\n-   **Physical Metrics** including Body Mass Index (BMI) measurements.\n\n-   **Behavioural Factors** including physical activity levels and levels of alcohol consumption.\n\n# 2.0 Data Pre-Processing\n\n## 2.1 Loading R Packages\n\nThe following R packages were used:\n\n| R Package   | Description |\n|-------------|-------------|\n| `dplyr`     |             |\n| `tidyverse` |             |\n|             |             |\n|             |             |\n|             |             |\n|             |             |\n|             |             |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse, dplyr) \n```\n:::\n\n\n\n## 2.2 Importing the Data\n\nThe dataset was imported into R using the `read_csv` function from the `readr` package, which is part of the `tidyverse` suite.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheartattack_data <- read_csv(\"data/japan_heart_attack_dataset.csv\")\n```\n:::\n\n\n\n## 2.3 Understanding the Data and Data Wrangling\n\nTo gain an initial understanding of the dataset, the following code chunk utilises the `glimpse` function from the `dplyr` package. This function provides a quick overview of the dataset's structure by displaying the first few entries of each column along with their data types.\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heartattack_data)\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 32\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <chr> \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"F…\n$ Region                  <chr> \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\", \"…\n$ Smoking_History         <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Y…\n$ Diabetes_History        <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Hypertension_History    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <chr> \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High\", …\n$ Diet_Quality            <chr> \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", \"Go…\n$ Alcohol_Consumption     <chr> \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"Hig…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <chr> \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ Heart_Attack_Occurrence <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n$ Extra_Column_1          <dbl> 0.40498852, 0.03627815, 0.85297888, 0.39085280…\n$ Extra_Column_2          <dbl> 0.43330004, 0.51256694, 0.21959083, 0.29684675…\n$ Extra_Column_3          <dbl> 0.62871236, 0.66839275, 0.61343656, 0.15572404…\n$ Extra_Column_4          <dbl> 0.70160955, 0.11552874, 0.50800995, 0.87025144…\n$ Extra_Column_5          <dbl> 0.49814235, 0.42381938, 0.90066981, 0.39035591…\n$ Extra_Column_6          <dbl> 0.007901312, 0.083932768, 0.227205241, 0.40318…\n$ Extra_Column_7          <dbl> 0.79458257, 0.68895108, 0.49634358, 0.74140891…\n$ Extra_Column_8          <dbl> 0.29077922, 0.83016364, 0.75210679, 0.22396813…\n$ Extra_Column_9          <dbl> 0.49719307, 0.63449028, 0.18150125, 0.32931387…\n$ Extra_Column_10         <dbl> 0.52199452, 0.30204337, 0.62918031, 0.14319054…\n$ Extra_Column_11         <dbl> 0.79965663, 0.04368285, 0.01827617, 0.90778075…\n$ Extra_Column_12         <dbl> 0.72239788, 0.45166789, 0.06322702, 0.54232201…\n$ Extra_Column_13         <dbl> 0.1487387, 0.8786714, 0.1465122, 0.9224606, 0.…\n$ Extra_Column_14         <dbl> 0.8340099, 0.5356022, 0.9972962, 0.6262165, 0.…\n$ Extra_Column_15         <dbl> 0.061632229, 0.617825340, 0.974455410, 0.22860…\n```\n\n\n:::\n:::\n\n\n:::\n\nBased on the output generated, the dataset consists of 30,000 rows and 32 columns.\n\n### 2.3.1 Filtering of Columns\n\nFrom the output generated in Section 2.3, the dataset includes 15 columns labelled from `Extra_Column_1` to `Extra_Column_15` . These columns do not have clear descriptions nor apparent relevance to the study. Hence, in order to streamline the dataset, these columns were removed. This would allow us to focus on variables that would be more relevant to the analysis.\n\nAfter filtering out the irrelevant columns, the dataset now comprises of 17 columns as shown in the *Results* tab below:\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheartattack_data_filtered <- select(heartattack_data, -matches(\"Extra_Column_\"))\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 17\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <chr> \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"F…\n$ Region                  <chr> \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\", \"…\n$ Smoking_History         <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Y…\n$ Diabetes_History        <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Hypertension_History    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <chr> \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High\", …\n$ Diet_Quality            <chr> \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", \"Go…\n$ Alcohol_Consumption     <chr> \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"Hig…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <chr> \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ Heart_Attack_Occurrence <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n```\n\n\n:::\n:::\n\n\n:::\n\n### 2.3.2 Duplicate and Missing Value Checks\n\n**Duplicate Data Check**\n\nWe performed a check for duplicate records using the `dplyr` package. Duplicates can skew analysis results. Hence, identifying and removing them is crucial.\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheartattack_data_v3 <- heartattack_data_filtered %>%\n  mutate(is_duplicate = duplicated(.) | duplicated(., fromLast = TRUE))\n\n# Filtering to obtain only the rows that are duplicates\nduplicates_only <- filter(heartattack_data_v3, is_duplicate == TRUE)\n\n# Displaying the first few rows of the duplicates\nhead(duplicates_only)\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 18\n# ℹ 18 variables: Age <dbl>, Gender <chr>, Region <chr>, Smoking_History <chr>,\n#   Diabetes_History <chr>, Hypertension_History <chr>,\n#   Cholesterol_Level <dbl>, Physical_Activity <chr>, Diet_Quality <chr>,\n#   Alcohol_Consumption <chr>, Stress_Levels <dbl>, BMI <dbl>,\n#   Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>, is_duplicate <lgl>\n```\n\n\n:::\n:::\n\n\n:::\n\nAfter applying the duplicate check, the output indicated a tibble data frame of 0 × 18, which implies that there are no duplicate records in our dataset.\n\n**Missing Value Check**\n\nMissing values in a dataset can introduce bias and affect the accuracy of statistical analysis, leading to misleading results. Hence, the `dplyr` package was utilised to identify and summarise the missing values across each variable in the dataset.\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_values_summary <- heartattack_data_filtered %>%\n  summarise_all(~ sum(is.na(.)))\n\nmissing_values_summary\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 17\n    Age Gender Region Smoking_History Diabetes_History Hypertension_History\n  <int>  <int>  <int>           <int>            <int>                <int>\n1     0      0      0               0                0                    0\n# ℹ 11 more variables: Cholesterol_Level <int>, Physical_Activity <int>,\n#   Diet_Quality <int>, Alcohol_Consumption <int>, Stress_Levels <int>,\n#   BMI <int>, Heart_Rate <int>, Systolic_BP <int>, Diastolic_BP <int>,\n#   Family_History <int>, Heart_Attack_Occurrence <int>\n```\n\n\n:::\n:::\n\n\n:::\n\nThe output indicates the count of missing values for each variable in the dataset. In this case, all columns have a count of 0, indicating that this dataset has no missing values.\n\n### 2.3.3 Recoding Variables\n\n**Recoding BMI**\n\nThe World Health Organisation's International BMI Classification was applied to the dataset to categorise the BMI values into four distinct groups. Applying this classification would simplify the interpretation of BMI values, making it easier to understand how the different weight categories impact heart attacks.\n\nThe categories used are as follows:\n\n| Classification | BMI         |\n|----------------|-------------|\n| Underweight    | \\<18.5      |\n| Normal Weight  | 18.5 - 24.9 |\n| Pre-Obese      | 25.0 - 29.9 |\n| Obese          | \\>=30       |\n\nTo implement this categorisation in our dataset, the `cut` function in R was utilised. This function assigns each BMI value to one of the specified categories, creating a new column, `BMI_Category`, in the dataset.\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Categorizing BMI according to WHO standards\nheartattack_data_filtered$BMI_Category <- cut(\n  heartattack_data_filtered$BMI,\n  breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),\n  labels = c(\"Underweight\", \"Normal Weight\", \"Pre-Obese\", \"Obese\"),\n  right = TRUE\n)\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] Obese         Pre-Obese     Pre-Obese     Normal Weight Normal Weight\n[6] Normal Weight\nLevels: Underweight Normal Weight Pre-Obese Obese\n```\n\n\n:::\n:::\n\n\n:::\n\n### 2.3.4 Data Type Conversion\n\nThe data table below shows the current data type of each of the 17 columns, along with the proposed data type for conversion. To improve data handling, the proposed data type for each column should align with the nature of the data.\n\n| Variable                | Current Data Type | Proposed Data Type |\n|-------------------------|-------------------|--------------------|\n| Age                     | Double            | Integer            |\n| Cholesterol_Level       | Double            | Double             |\n| Stress_Levels           | Double            | Double             |\n| Heart_Rate              | Double            | Double             |\n| Systolic_BP             | Double            | Double             |\n| Diastolic_BP            | Double            | Double             |\n| Gender                  | Character         | Factor             |\n| Region                  | Character         | Factor             |\n| Smoking_History         | Character         | Factor             |\n| Diabetes_History        | Character         | Factor             |\n| Hypertension_History    | Character         | Factor             |\n| Physical_Activity       | Character         | Ordered Factor     |\n| Diet_Quality            | Character         | Ordered Factor     |\n| Alcohol_Consumption     | Character         | Ordered Factor     |\n| Family_History          | Character         | Factor             |\n| Heart_Attack_Occurrence | Character         | Factor             |\n| BMI_Category            | Character         | Ordered Factor     |\n\nThe following code chunk is used to implement the proposed data type conversions:\n\n::: panel-tabset\n#### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert numeric variables\nheartattack_data_filtered <- heartattack_data_filtered %>%\n  mutate(\n    Age = as.integer(Age)\n  )\n\n# Convert categorical variables to factors\nheartattack_data_filtered <- heartattack_data_filtered %>%\n  mutate(\n    Gender = as.factor(Gender),\n    Region = as.factor(Region),\n    Smoking_History = as.factor(Smoking_History),\n    Diabetes_History = as.factor(Diabetes_History),\n    Hypertension_History = as.factor(Hypertension_History),\n    Family_History = as.factor(Family_History),\n    Heart_Attack_Occurrence = as.factor(Heart_Attack_Occurrence)\n  )\n\n# Convert ordered categorical variables\nheartattack_data_filtered <- heartattack_data_filtered %>%\n  mutate(\n    Physical_Activity = factor(Physical_Activity, \n                               levels = c(\"Low\", \"Moderate\", \"High\"), \n                               ordered = TRUE),\n    Diet_Quality = factor(Diet_Quality, \n                          levels = c(\"Poor\", \"Average\", \"Good\"), \n                          ordered = TRUE),\n    Alcohol_Consumption = factor(Alcohol_Consumption, \n                                 levels = c(\"None\", \"Low\", \"Moderate\", \"High\"), \n                                 ordered = TRUE),\n    BMI_Category = factor(BMI_Category, \n                          levels = c(\"Underweight\", \"Normal Weight\", \"Pre-Obese\", \"Obese\"), \n                          ordered = TRUE)\n  )\n```\n:::\n\n\n\n#### Results\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 18\n$ Age                     <int> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <fct> Male, Male, Male, Female, Female, Female, Male…\n$ Region                  <fct> Urban, Urban, Rural, Urban, Rural, Rural, Urba…\n$ Smoking_History         <fct> Yes, No, Yes, No, No, No, No, Yes, No, No, No,…\n$ Diabetes_History        <fct> No, No, No, No, No, No, Yes, No, No, No, No, N…\n$ Hypertension_History    <fct> No, No, No, No, No, No, Yes, No, Yes, No, Yes,…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <ord> Moderate, Low, Low, Moderate, High, Low, High,…\n$ Diet_Quality            <ord> Poor, Good, Average, Good, Good, Good, Poor, P…\n$ Alcohol_Consumption     <ord> Low, Low, Moderate, High, High, High, High, No…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <fct> No, Yes, No, No, No, No, No, No, No, Yes, Yes,…\n$ Heart_Attack_Occurrence <fct> No, No, No, No, No, No, No, No, Yes, No, No, N…\n$ BMI_Category            <ord> Obese, Pre-Obese, Pre-Obese, Normal Weight, No…\n```\n\n\n:::\n:::\n\n\n:::\n\n# 7.0 References\n\nOhira, T., Eguchi, E., Hayashi, F., Kinuta, M., & Imano, H. (2023). Epidemiology of cardiovascular disease in Japan: An overview study. *Journal of Cardiology, 81*(5), 379-387. https://doi.org/10.1016/j.jjcc.2023.07.007\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}