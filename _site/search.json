[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "```"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! I’m Sheryl. In this webpage, you will find my learning journey and deliverables for ISSS608 Visual Analytics and Applications."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using the read_csv() function of the readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThere data set contains seven attributes:\n\nCategorical Attributes: ID, CLASS, GENDER and RACE. These columns are denoted as chr (“character type”).\nContinuous Attributes: ENGLISH, MATHS, and SCIENCE. These columns are stored as dbl (“double type”), i.e. numeric values."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#loading-the-required-libraries",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#loading-the-required-libraries",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "",
    "text": "pacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "Importing Data",
    "text": "Importing Data\nThe code chunk below imports exam_data.csv into R environment by using the read_csv() function of the readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThere data set contains seven attributes:\n\nCategorical Attributes: ID, CLASS, GENDER and RACE. These columns are denoted as chr (“character type”).\nContinuous Attributes: ENGLISH, MATHS, and SCIENCE. These columns are stored as dbl (“double type”), i.e. numeric values."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs.-ggplot",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs.-ggplot",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "R Graphics vs. ggplot",
    "text": "R Graphics vs. ggplot\nThe tabset below compares how R Graphics and ggplot plot a simple histogram:\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths Scores\")\n\n\n\n\n\n\n\n\n\n\n\n\nSide Note: Attempting to Customise the R Graphics Histogram\nThe code chunk below customises the R Graphics histogram so that it’s similar to the ggplot2 histogram.\n\nhist(exam_data$MATHS, \n     breaks = 20,                     \n     col = \"grey\",                \n     border = \"black\",                 \n     main = \"Distribution of Maths Scores\",  \n     xlab = \"MATHS\",            \n     ylab = \"Count\")               \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAfter plotting the histograms using both R Graphics and ggplot2, I noted the following:\n\nX-Axis Labels: R Graphics automatically labels the x-axis with the column reference (“exam_data$MATHS”). This reduces the plot’s readability and interpretability as it directly reflects the code rather than a clear, descriptive label. On the other hand, ggplot2 retains the column name (”MATHS”) as the x-axis label, providing a more intuitive presentation by default.\nLayers: ggplot2 uses a layered approach, where data, aesthetics and geometric objects are added step-by-step using +."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "3.0 Essential Grammatical Elements in ggplot2: Data",
    "text": "3.0 Essential Grammatical Elements in ggplot2: Data\nThe code chunk below is used to call the ggplot() function.\n\nggplot(data=exam_data)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetics-mappings",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetics-mappings",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "4.0 Essential Grammatical Elements in ggplot2: Aesthetics Mappings",
    "text": "4.0 Essential Grammatical Elements in ggplot2: Aesthetics Mappings\nThe aesthetic mappings take attributes of the data and use them to influence visual characteristics. Each visual characteristics can thus encode an aspect of the data and be used to convey information.\nAll aesthetics of a plot are specified in the aes() function call.\n\nggplot(data=exam_data, aes(x=MATHS))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nOther aesthetic mappings include - x, y, color, size, shape, alpha (transparency)."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "5.0 Essential Grammatical Elements in ggplot2: geom",
    "text": "5.0 Essential Grammatical Elements in ggplot2: geom\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\nA plot must have at least one geom.\n\n5.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart using geom_bar():\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n5.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe y-scale is misleading.\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\n\n\n5.3 Geometric Objects: geom_histogram\nThe code chunk below uses geom_histogram() to create a simple histogram.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()  \n\n\n\n\n\n\n\n\n\n\n5.4 Modifying a Geometric Object by Changing geom\nIn the code chunk below:\n\nbins is used to change the number of bins to 20\nfill is used to shade the histogram with light blue\ncolor is used to change the outline colour of the bars in black.\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\n\n\n5.5 Modifying a Geometric Object by Changing aes( )\nThe code chunk below changes the interior colour of the histogram by using sub-group of aes():\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\n5.6 Geometric Objects: geom_density\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\n\n5.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nGenerally, the notches serve as a visual indicator of the confidence interval around the median.\nNotched Box Plots are particularly useful in assessing whether the medians are meaningfully different across groups.\n\n\n\n\n5.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe shape of the violin represents the density of the data at different values. Wider sections indicate higher data concentration.\nSome factors to consider when interpreting violin plots include the shape of the violin (width, number of peaks, etc.) and its symmetry. Symmetry represents the skewness of the data.\n\n\n\n\n5.9 Geometric Objects: geom_point\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n\n\n\n\n5.10 Geom Objects can be Combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "6.0 Essential Grammatical Elements in ggplot2: stat",
    "text": "6.0 Essential Grammatical Elements in ggplot2: stat\n\n6.1 Working with stat( )\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n6.2 Working with stat - the stat_summary( ) Method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\n\n\n\n\n\n6.3 Working with stat - the geom( ) Method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)          \n\n\n\n\n\n\n\n\n\n\n6.4 Adding a Best Fit Curve on a Scatterplot\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\nThe default method used is loess. The default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "7.0 Essential Grammatical Elements in ggplot2: Facets",
    "text": "7.0 Essential Grammatical Elements in ggplot2: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables.\n\n7.1 Working with facet_wrap\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n7.2 facet_grid() Function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "8.0 Essential Grammatical Elements in ggplot2: Coordinates",
    "text": "8.0 Essential Grammatical Elements in ggplot2: Coordinates\n\n8.1 Working with Coordinates\nBy default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nHowever, you can flip the bar chart into a horizontal bar chart.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n8.2 Changing the y- and x-axis Range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\n\n\n\n\nFixing both y-axis and x-axis range from 0 to 100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-theme",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-theme",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "9.0 Essential Grammatical Elements in ggplot2: Theme",
    "text": "9.0 Essential Grammatical Elements in ggplot2: Theme\nThemes control elements of the graph not related to the data,\n\n9.1 Working with theme\n\ntheme_gray()theme_classic()theme_minimal()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html",
    "href": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto the R environment by using the code chunk below:\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#getting-started",
    "href": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#getting-started",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto the R environment by using the code chunk below:\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "href": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Importing Data",
    "text": "Importing Data\nThe code chunk below uses read_csv() of readr to import REALIS2019.csv into the R environment as a tibble data frame.\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "href": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Pivoting Data",
    "text": "Pivoting Data\n\npopdata_long &lt;- popdata_fat %&gt;%\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\")\n\n\nwrite_rds(popdata_long,\"rds/popdata_long.rds\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "href": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Working with dplyr",
    "text": "Working with dplyr\n\nrealis2019_selected &lt;- realis2019 %&gt;%\n  select('Project Name',\n         'Transacted Price ($)',\n         'Type of Sale',\n         'Unit Price ($ psm)',\n         'Property Type')\nrealis2019_selected\n\n# A tibble: 19,515 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;                         &lt;dbl&gt;\n 1 PEIRCE VIEW                        840000 Resale                         7434\n 2 FLORIDA PARK                      3040000 Resale                         9737\n 3 BULLION PARK                       860000 Resale                        11467\n 4 CASTLE GREEN                      1000000 Resale                         9346\n 5 HAPPY ESTATE                      7000000 Resale                        10183\n 6 TEACHER'S HOUSING…                2880000 Resale                        12659\n 7 THE PANORAMA                      1510000 Resale                        16064\n 8 THE PANORAMA                       710000 Resale                        16905\n 9 CHIP THYE GARDEN                  2800000 Resale                        13500\n10 TEACHER'S HOUSING…                2300000 Resale                         9935\n# ℹ 19,505 more rows\n# ℹ 1 more variable: `Property Type` &lt;chr&gt;\n\n\nTake note that only the first ten results of a tibble data frame would be displayed."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#working-with-filter-of-dplyr",
    "href": "Hands-on Exercise/Hands-on_Ex00/Hands-on_Ex00.html#working-with-filter-of-dplyr",
    "title": "Hands-on Exercise 00: Working with tidyverse",
    "section": "Working with filter() of dplyr",
    "text": "Working with filter() of dplyr\n\nrealis2019_filtered &lt;- realis2019_selected %&gt;%\n  filter(`Property Type` == \"Condominium\" |\n           `Property Type` == \"Apartment\") %&gt;%\n  filter(`Type of Sale` == \"New Sale\") %&gt;%\n  filter(`Unit Price ($ psm)` &lt;= 13000)\n\nrealis2019_filtered\n\n# A tibble: 87 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;                         &lt;dbl&gt;\n 1 RIVERFRONT RESIDE…                1029000 New Sale                      12863\n 2 RIVERFRONT RESIDE…                 871000 New Sale                      12809\n 3 RIVERFRONT RESIDE…                1940000 New Sale                      12848\n 4 RIVERFRONT RESIDE…                1030000 New Sale                      12875\n 5 RIVERFRONT RESIDE…                2061000 New Sale                      12962\n 6 RIVERFRONT RESIDE…                 762000 New Sale                      12915\n 7 RIVERFRONT RESIDE…                1001000 New Sale                      12513\n 8 RIVERFRONT RESIDE…                1271000 New Sale                      12838\n 9 RIVERFRONT RESIDE…                1310000 New Sale                      12970\n10 RIVERFRONT RESIDE…                1339000 New Sale                      13000\n# ℹ 77 more rows\n# ℹ 1 more variable: `Property Type` &lt;chr&gt;\n\n\n\nPutting It All Together\nAlternatively, you can combine the select() and filter() functions together as shown in the code chunk below:\n\nrealis2019_filtered2 &lt;- realis2019 %&gt;%\n  select('Project Name',\n         'Transacted Price ($)',\n         'Type of Sale',\n         'Unit Price ($ psm)',\n         'Property Type') %&gt;%\n  filter(`Property Type` == \"Condominium\" |\n           `Property Type` == \"Apartment\") %&gt;%\n  filter(`Type of Sale` == \"New Sale\") %&gt;%\n  filter(`Unit Price ($ psm)` &lt;= 13000)\n\nrealis2019_filtered2\n\n# A tibble: 87 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;                         &lt;dbl&gt;\n 1 RIVERFRONT RESIDE…                1029000 New Sale                      12863\n 2 RIVERFRONT RESIDE…                 871000 New Sale                      12809\n 3 RIVERFRONT RESIDE…                1940000 New Sale                      12848\n 4 RIVERFRONT RESIDE…                1030000 New Sale                      12875\n 5 RIVERFRONT RESIDE…                2061000 New Sale                      12962\n 6 RIVERFRONT RESIDE…                 762000 New Sale                      12915\n 7 RIVERFRONT RESIDE…                1001000 New Sale                      12513\n 8 RIVERFRONT RESIDE…                1271000 New Sale                      12838\n 9 RIVERFRONT RESIDE…                1310000 New Sale                      12970\n10 RIVERFRONT RESIDE…                1339000 New Sale                      13000\n# ℹ 77 more rows\n# ℹ 1 more variable: `Property Type` &lt;chr&gt;"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using the read_csv() function of the readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThere data set contains seven attributes:\n\nCategorical Attributes: ID, CLASS, GENDER and RACE. These columns are denoted as chr (“character type”).\nContinuous Attributes: ENGLISH, MATHS, and SCIENCE. These columns are stored as dbl (“double type”), i.e. numeric values."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#introducing-ggplot",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#introducing-ggplot",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "2.0 Introducing ggplot",
    "text": "2.0 Introducing ggplot\n\n2.1 R Graphics vs. ggplot\nThe tabset below compares how R Graphics and ggplot plot a simple histogram:\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths Scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.1 Side Note: Attempting to Customise the R Graphics Histogram\nThe code chunk below customises the R Graphics histogram so that it’s similar to the ggplot2 histogram.\n\nhist(exam_data$MATHS, \n     breaks = 20,                     \n     col = \"grey\",                \n     border = \"black\",                 \n     main = \"Distribution of Maths Scores\",  \n     xlab = \"MATHS\",            \n     ylab = \"Count\")               \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAfter plotting the histograms using both R Graphics and ggplot2, I noted the following:\n\nX-Axis Labels: R Graphics automatically labels the x-axis with the column reference (“exam_data$MATHS”). This reduces the plot’s readability and interpretability as it directly reflects the code rather than a clear, descriptive label. On the other hand, ggplot2 retains the column name (”MATHS”) as the x-axis label, providing a more intuitive presentation by default.\nLayers: ggplot2 uses a layered approach, where data, aesthetics and geometric objects are added step-by-step using +."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "href": "Hands-on Exercise/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "title": "Hands-on Exercise 01: A Layered Grammar of Graphics: ggplot2 Methods",
    "section": "10.0 Reference",
    "text": "10.0 Reference\n\nHadley Wickham (2023) ggplot2: Elegant Graphics for Data Analysis. Online 3rd edition.\nWinston Chang (2013) R Graphics Cookbook 2nd edition. Online version.\nHealy, Kieran (2019) Data Visualization: A practical introduction. Online version\nLearning ggplot2 on Paper – Components\nLearning ggplot2 on Paper – Layer\nLearning ggplot2 on Paper – Scale"
  },
  {
    "objectID": "index.html#latest-posts",
    "href": "index.html#latest-posts",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "Latest Posts",
    "text": "Latest Posts\n\n\n\n\n\n\n\n\nHands-on Exercise 4.1: Visualising Distribution\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nFeb 1, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3.2: Programming Animated Statistical Graphics with R\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 26, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on Exercise 3.1: Programming Interactive Data Visualisation with R\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 26, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "The following R packages will be used:\n\nggrepel: Provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: Provides extra themes, geoms and scales for ggplot2.\nhrbrthemes: Provides typography-centric themes and theme components for ggplot2.\npatchwork: Prepares composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "The following R packages will be used:\n\nggrepel: Provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: Provides extra themes, geoms and scales for ggplot2.\nhrbrthemes: Provides typography-centric themes and theme components for ggplot2.\npatchwork: Prepares composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel.",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel.",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "2.1 Working with ggrepel.",
    "text": "2.1 Working with ggrepel.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ngeom_label_repel(aes(label = ID), fontface = “bold”): Replaces geom_label to dynamically adjust label positions and prevent overlapping.\nThe density of points in certain regions of the graph may lead to labels being omitted.\n\n\n\n2.1.1 Exploring Other Arguments in geom_label_repel\nA list of arguments that can be used with geom_label_repel() can be found here."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#max.overlaps",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#max.overlaps",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "max.overlaps",
    "text": "max.overlaps\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\",\n                   max.overlaps=20) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nmax.overlaps\nBy default, geom_label_repel exclude text labels when they overlap too many other labels. The default is 10. Increasing the max.overlaps argument would increase the number of labels displayed in the graph."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "2.1 Working with ggrepel",
    "text": "2.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ngeom_label_repel(aes(label = ID), fontface = \"bold\"): Replaces geom_label() to dynamically adjust label positions and prevent overlapping.\nThe density of points in certain regions of the graph may lead to labels being omitted.\n\n\n\n2.1.1 Exploring Other Arguments in geom_label_repel\nA list of arguments that can be used with geom_label_repel() can be found here.\nmax.overlaps\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\",\n                   max.overlaps=20) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nmax.overlaps\nBy default, geom_label_repel exclude text labels when they overlap too many other labels. The default is 10. Increasing the max.overlaps argument would increase the number of labels displayed in the graph."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "3.1 Working with ggtheme Package",
    "text": "3.1 Working with ggtheme Package\nIn the example below, The Economist theme is used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "3.2 Working with hrbthems Package",
    "text": "3.2 Working with hrbthems Package\nThe hrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed, and fonts that are used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\naxis_title_size: Adjust the font size of the axis title.\nbase_size: Adjust the font size of the axis labels.\ngrid: Remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "4.1 Creating Composite Graphics: patchwork Methods",
    "text": "4.1 Creating Composite Graphics: patchwork Methods\nGenerally syntax that can be used:\n\n+: Used to create a two-column layout\n( ): Used to create a subplot group.\n/: Used to create a two-row layout.\n\n\n4.1.1 Combining Two ggplot2 Graphs\n\nUsing +Using ()Using /\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\n\n(p1 + p2)/p1\n\n\n\n\n\n\n\n\n\n\n\np1 / p3\n\n\n\n\n\n\n\n\n\n\n\n\n\n4.1.2 Combining Three ggplot2 Graphs\nThe following syntax can be used:\n\n/: Used to stack two graphs.\n|: Used to place the plots beside each other.\n( ): Used to define the sequence of the plotting.\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n\n\n\n4.1.3 Creating a Composite Figure with Tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nplot_annotation(): Adds annotations to the composite plot.\ntag_levels = 'I': Automatically tags each subplot with Roman numerals. Other options for tag_levels include: A, a, 1\n\n\n\n\n4.1.3.1 Other Arguments for plot_annotation()\nA list of arguments that can be used with plot_annotation() can be found here.\nUsing tag_prefix:\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = '1', tag_prefix=\"Figure \")\n\n\n\n\n\n\n\n\n\n\n\n4.1.4 Creating Figure with inset\ninset_element() of patchwork enables us to place several plots or graphic elements freely on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\n\n\n4.1.5 Creating a Composite Figure by Using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\n\n\n\n4.1.6 Attempting to Modify the Plot in 4.1.5\nAs the plot title of p3 was cut off, with the titles of p2 overlapping p3, we will attempt to modify the plot by reducing the title size. At the same time, I will also try other themes.\n\nReducing the Title SizeUsing theme_wsj()\n\n\nAdding plot.title = element_text(size=10) will reduce the respective plots’ title size.\n\npatchwork & \n  theme_economist() & \n  theme(\n    plot.title = element_text(size = 9),        # Reduce plot title size\n    axis.text = element_text(size = 6),         # Reduce axis tick text size\n    axis.title = element_text(size = 6)         # Reduce axis labels size\n  )\n\n\n\n\n\n\n\n\n\n\n\npatchwork & \n  theme_wsj() & \n  theme(\n    plot.title = element_text(size = 8),        # Reduce plot title size\n    axis.text = element_text(size = 6),         # Reduce axis tick text size\n    axis.title = element_text(size = 6)         # Reduce axis labels size\n  )"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#disclaimer",
    "href": "Hands-on Exercise/Hands-on_Ex02/Hands-on_Ex02.html#disclaimer",
    "title": "Hands-on Exercise 02: Beyond ggplot2 Fundamentals",
    "section": "5.1 Disclaimer",
    "text": "5.1 Disclaimer\nThis document includes content written with the assistance of ChatGPT, which was used for grammar correction and the explanation of arguments for the various packages."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "The following R packages would installed and loaded:\n\n\n\nR Package\nDescription\n\n\n\n\nggiraph\nMakes ggplot graphics interactive.\n\n\nplotly\nPlots interactive statistical graphs.\n\n\nDT\nCreates interactive tables on a html page.\n\n\ntidyverse\n\n\n\npatchwork\nCombines multiple ggplot2 graphs into one figure.\n\n\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\nThe code chunk below uses read_csv( ) to import the Exam_data.csv data file into R and save it as a tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "The code chunk below uses read_csv( ) to import the Exam_data.csv data file into R and save it as a tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "2.1 Tooltip Effect with tooltip Aesthetic",
    "text": "2.1 Tooltip Effect with tooltip Aesthetic\nThe code chunk below plots an interactive statistical graph using the ggiraph package.\nThe code chunk consists of the following parts:\n\nGgplot object, and\ngirafe( ) of ggiraph will be used to create an interactive svg object.\n\ngeom_dotplot_interactive( ) will be used to create a basic graph while girafe( ) will be used to generate a svg object to be displayed on a html page.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.1 Displaying Multiple Information on tooltip",
    "text": "3.1 Displaying Multiple Information on tooltip\nThe code chunk below can be customised by including a list object:\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) # Modify the tooltip here.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.2 Customising tooltip Style",
    "text": "3.2 Customising tooltip Style\nopts_tooltip( ) of ggiraph customises tooltip rendering by adding CSS declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\n# CSS declarations in the code above.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.3 Displaying Statistics on tooltip",
    "text": "3.3 Displaying Statistics on tooltip\nThe code chunk below uses a function to compute 90% confidence interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.4 Hover Effect with data_id Aesthetic",
    "text": "3.4 Hover Effect with data_id Aesthetic\nElements associated with data_id will be highlighted upon mouse over. The default value of the hover css is hover_css=\"fill:orange;\".\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.5 Styling Hover Effect",
    "text": "3.5 Styling Hover Effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"), #  Highlighted elements in #202020 colour.\n    opts_hover_inv(css = \"opacity:0.2;\") # Non-highlighted elements would have lower opacity.\n  )                                        \n)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effects",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effects",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.6 Combining tooltip and hover Effects",
    "text": "3.6 Combining tooltip and hover Effects\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.7 Click Effect with onclick",
    "text": "3.7 Click Effect with onclick\nThe data object would link to a web document, which would be displayed in a new window once clicked.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "3.8 Coordinated Multiple Views with ggiraph",
    "text": "3.8 Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), # patchwork\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\nWhen a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\npatchwork will be used inside the girafe function to create the interactive coordinated multiple views."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "4.1 Creating an Interactive Scatter Plot: plot_ly( ) Method",
    "text": "4.1 Creating an Interactive Scatter Plot: plot_ly( ) Method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "4.2 Working with Visual Variable: plot_ly( ) Method",
    "text": "4.2 Working with Visual Variable: plot_ly( ) Method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatterplot-ggplotly-method",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatterplot-ggplotly-method",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "4.3 Creating an Interactive Scatterplot: ggplotly( ) Method",
    "text": "4.3 Creating an Interactive Scatterplot: ggplotly( ) Method\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "4.4 Coordinated Multiple Views with plotly",
    "text": "4.4 Coordinated Multiple Views with plotly\n\nhighlight_key( ) is used as shared data\nTwo scatterplots would be created via ggplot2\nsubplot( ) will be used to place them next to each other.\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "5.1 Interactive Data Table: DT Package",
    "text": "5.1 Interactive Data Table: DT Package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "5.2 Linked Brushing: crosstalk Method",
    "text": "5.2 Linked Brushing: crosstalk Method\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#disclaimer",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#disclaimer",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "7.1 Disclaimer",
    "text": "7.1 Disclaimer\nThis document includes content written with the assistance of ChatGPT, which was used for grammar correction and the explanation of arguments for the various packages."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#loading-the-r-packages",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03.html#loading-the-r-packages",
    "title": "Hands-on Exercise 3.1: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "The following R packages would installed and loaded:\n\n\n\nR Package\nDescription\n\n\n\n\nggiraph\nMakes ggplot graphics interactive.\n\n\nplotly\nPlots interactive statistical graphs.\n\n\nDT\nCreates interactive tables on a html page.\n\n\ntidyverse\n\n\n\npatchwork\nCombines multiple ggplot2 graphs into one figure.\n\n\n\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "The following code chunk imports and loads the following R packages:\n\n\n\n\n\n\n\nR Package\nDescription\n\n\n\n\ngifski\nConverts image frames into high-quality GIF animations.\n\n\ngganimate\nA ggplot extension for creating animated statistical graphs.\n\n\ngapminder\nAn excerpt of the data available at Gapminder.org. The country_colors scheme will be used in this exercise.\n\n\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\n\nThe following code chunk is used to import the Data worksheet from GlobalPopulation Excel workbook into R:\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\nmutate_each( ) of the dplyr package is used to convert all data type into factor. In R, a factor is a data type that is used to represent categorical data.\nHowever, mutate_each( ) and funs( ) were deprecated in dplyr 0.7.0 and dplyr 0.8.0 respectively. As such, the code chunk will be re-written using mutate_at( ).\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nAlternatively, across( ) can also be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#loading-the-r-packages",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#loading-the-r-packages",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "The following code chunk imports and loads the following R packages:\n\n\n\n\n\n\n\nR Package\nDescription\n\n\n\n\ngifski\nConverts image frames into high-quality GIF animations.\n\n\ngganimate\nA ggplot extension for creating animated statistical graphs.\n\n\ngapminder\nAn excerpt of the data available at Gapminder.org. The country_colors scheme will be used in this exercise.\n\n\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#importing-the-data",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#importing-the-data",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "The following code chunk is used to import the Data worksheet from GlobalPopulation Excel workbook into R:\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\nmutate_each( ) of the dplyr package is used to convert all data type into factor. In R, a factor is a data type that is used to represent categorical data.\nHowever, mutate_each( ) and funs( ) were deprecated in dplyr 0.7.0 and dplyr 0.8.0 respectively. As such, the code chunk will be re-written using mutate_at( ).\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nAlternatively, across( ) can also be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "2.1 Building a Static Population Bubble Plot",
    "text": "2.1 Building a Static Population Bubble Plot\nThe code chunk below uses the basic ggplot2 functions to create a static bubble plot:\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "2.2 Building an Animated Bubble Plot",
    "text": "2.2 Building an Animated Bubble Plot\n\ntransition_time( ) is used to create the transition through distinct states of time.\nease_aes( ) is used to control the easing of aesthetics. The default is linear. Other methods include quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce. For example, cubic-in-out would start with the animation slowly easing in, speeding up in the middle and then slowly easing out.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "3.1 Building an Animated Bubble Plot: ggplotly( ) Method",
    "text": "3.1 Building an Animated Bubble Plot: ggplotly( ) Method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\nThe animated bubble plot includes a play/pause button and a slider to control the animation.\nAlthough show.legend = FALSE was used, the legend still appears on the plot. Hence, theme(legend.position='none') will be used to replace the affected code chunk.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "3.2 Building an Animated Bubble Plot: plot_ly( ) Method",
    "text": "3.2 Building an Animated Bubble Plot: plot_ly( ) Method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#disclaimer",
    "href": "Hands-on Exercise/Hands-on_Ex03/Hands-on_Ex03b.html#disclaimer",
    "title": "Hands-on Exercise 3.2: Programming Animated Statistical Graphics with R",
    "section": "5.1 Disclaimer",
    "text": "5.1 Disclaimer\nThis document includes content written with the assistance of ChatGPT, which was used for grammar and code correction, and the explanation of arguments for the various packages."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "Welcome",
    "text": "Welcome\nHello and welcome to my webpage for ISSS608 Visual Analytics and Applications taught by Prof. Kam Tin Seong. Here, you'll find my coursework and projects for the module. Enjoy!"
  },
  {
    "objectID": "index.html#explore",
    "href": "index.html#explore",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "Explore",
    "text": "Explore"
  },
  {
    "objectID": "Hands-on_Ex_Landing.html",
    "href": "Hands-on_Ex_Landing.html",
    "title": "Hands-on Exercise Landing Page",
    "section": "",
    "text": "Sheryl Ann Tan Yi-Shi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 19, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 26, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 26, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nFeb 1, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Hands-on_Ex_Landing.html#overview-of-hands-on-exercises",
    "href": "Hands-on_Ex_Landing.html#overview-of-hands-on-exercises",
    "title": "Hands-on Exercise Landing Page",
    "section": "",
    "text": "Sheryl Ann Tan Yi-Shi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 19, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 26, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nJan 26, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSheryl Ann Tan Yi-Shi\n\n\nFeb 1, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default",
    "section": "",
    "text": "Cardiovascular diseases, including heart attacks, are a leading cause of mortality worldwide. In recent years, Japan has experienced a steady increase in heart disease-related mortality, largely driven by its aging population, making it a growing public health concern (Ohira et al., 2023).\n\n\n\nThis exercise involves assuming the role of a graphical editor at an international media company that regularly publishes content on digital platforms. The company plans to release articles focused on one of the following themes:\n\nHeart Attack in Japan\nShip Performance in the Gulf of Guinea\n\nFor the purposes of this take-home exercise, the theme, Heart Attack in Japan, was selected for the preparation of data visualizations for the article.\n\n\n\nThe dataset used in this exercise is sourced from Kaggle and can be accessed via this link.\nThis dataset provides the opportunity to perform a comprehensive analysis of heart attack incidents in Japan as it includes a range of features such as:\n\nAge and Demographics including gender and region.\nMedical Indicators including cholesterol level, heart rate, systolic blood pressure, and diastolic blood pressure.\nPhysical Metrics including Body Mass Index (BMI) measurements.\nBehavioural Factors including physical activity levels and levels of alcohol consumption."
  },
  {
    "objectID": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#background",
    "href": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#background",
    "title": "Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default",
    "section": "",
    "text": "Cardiovascular diseases, including heart attacks, are a leading cause of mortality worldwide. In recent years, Japan has experienced a steady increase in heart disease-related mortality, largely driven by its aging population, making it a growing public health concern (Ohira et al., 2023)."
  },
  {
    "objectID": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#the-task",
    "href": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#the-task",
    "title": "Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default",
    "section": "",
    "text": "This exercise involves assuming the role of a graphical editor at an international media company that regularly publishes content on digital platforms. The company plans to release articles focused on one of the following themes:\n\nHeart Attack in Japan\nShip Performance in the Gulf of Guinea\n\nFor the purposes of this take-home exercise, the theme, Heart Attack in Japan, was selected for the preparation of data visualizations for the article."
  },
  {
    "objectID": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#about-the-dataset",
    "href": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#about-the-dataset",
    "title": "Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default",
    "section": "",
    "text": "The dataset used in this exercise is sourced from Kaggle and can be accessed via this link.\nThis dataset provides the opportunity to perform a comprehensive analysis of heart attack incidents in Japan as it includes a range of features such as:\n\nAge and Demographics including gender and region.\nMedical Indicators including cholesterol level, heart rate, systolic blood pressure, and diastolic blood pressure.\nPhysical Metrics including Body Mass Index (BMI) measurements.\nBehavioural Factors including physical activity levels and levels of alcohol consumption."
  },
  {
    "objectID": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#loading-r-packages",
    "href": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#loading-r-packages",
    "title": "Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default",
    "section": "2.1 Loading R Packages",
    "text": "2.1 Loading R Packages\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#importing-the-data",
    "href": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#importing-the-data",
    "title": "Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default",
    "section": "2.2 Importing the Data",
    "text": "2.2 Importing the Data\n\nheartattack_data &lt;- read_csv(\"data/japan_heart_attack_dataset.csv\")"
  },
  {
    "objectID": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#understanding-the-data",
    "href": "Take-Home Exercise/Take-Home_Ex01/Take-Home_Ex01.html#understanding-the-data",
    "title": "Take-Home Exercise 1.0: Creating Data Visualisation Beyond Default",
    "section": "2.3 Understanding the Data",
    "text": "2.3 Understanding the Data\nThe following code chunk allows us to understand the structure of the dataset.\n\nCodeResults\n\n\n\nstr(heartattack_data)\n\n\n\n\n\nspc_tbl_ [30,000 × 32] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Age                    : num [1:30000] 56 69 46 32 60 25 78 38 56 75 ...\n $ Gender                 : chr [1:30000] \"Male\" \"Male\" \"Male\" \"Female\" ...\n $ Region                 : chr [1:30000] \"Urban\" \"Urban\" \"Rural\" \"Urban\" ...\n $ Smoking_History        : chr [1:30000] \"Yes\" \"No\" \"Yes\" \"No\" ...\n $ Diabetes_History       : chr [1:30000] \"No\" \"No\" \"No\" \"No\" ...\n $ Hypertension_History   : chr [1:30000] \"No\" \"No\" \"No\" \"No\" ...\n $ Cholesterol_Level      : num [1:30000] 186 185 211 211 224 ...\n $ Physical_Activity      : chr [1:30000] \"Moderate\" \"Low\" \"Low\" \"Moderate\" ...\n $ Diet_Quality           : chr [1:30000] \"Poor\" \"Good\" \"Average\" \"Good\" ...\n $ Alcohol_Consumption    : chr [1:30000] \"Low\" \"Low\" \"Moderate\" \"High\" ...\n $ Stress_Levels          : num [1:30000] 3.64 3.38 3.81 6.01 6.81 ...\n $ BMI                    : num [1:30000] 34 28.2 27.6 23.7 19.8 ...\n $ Heart_Rate             : num [1:30000] 72.3 57.5 64.7 55.1 76.7 ...\n $ Systolic_BP            : num [1:30000] 124 130 146 132 101 ...\n $ Diastolic_BP           : num [1:30000] 85.7 73.5 72 68.2 92.9 ...\n $ Family_History         : chr [1:30000] \"No\" \"Yes\" \"No\" \"No\" ...\n $ Heart_Attack_Occurrence: chr [1:30000] \"No\" \"No\" \"No\" \"No\" ...\n $ Extra_Column_1         : num [1:30000] 0.405 0.0363 0.853 0.3909 0.9336 ...\n $ Extra_Column_2         : num [1:30000] 0.433 0.513 0.22 0.297 0.976 ...\n $ Extra_Column_3         : num [1:30000] 0.629 0.668 0.613 0.156 0.174 ...\n $ Extra_Column_4         : num [1:30000] 0.702 0.116 0.508 0.87 0.295 ...\n $ Extra_Column_5         : num [1:30000] 0.498 0.424 0.901 0.39 0.959 ...\n $ Extra_Column_6         : num [1:30000] 0.0079 0.0839 0.2272 0.4032 0.6898 ...\n $ Extra_Column_7         : num [1:30000] 0.795 0.689 0.496 0.741 0.905 ...\n $ Extra_Column_8         : num [1:30000] 0.291 0.83 0.752 0.224 0.757 ...\n $ Extra_Column_9         : num [1:30000] 0.497 0.634 0.182 0.329 0.338 ...\n $ Extra_Column_10        : num [1:30000] 0.522 0.302 0.629 0.143 0.362 ...\n $ Extra_Column_11        : num [1:30000] 0.7997 0.0437 0.0183 0.9078 0.7286 ...\n $ Extra_Column_12        : num [1:30000] 0.7224 0.4517 0.0632 0.5423 0.1767 ...\n $ Extra_Column_13        : num [1:30000] 0.149 0.879 0.147 0.922 0.485 ...\n $ Extra_Column_14        : num [1:30000] 0.834 0.536 0.997 0.626 0.312 ...\n $ Extra_Column_15        : num [1:30000] 0.0616 0.6178 0.9745 0.2286 0.4528 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Age = col_double(),\n  ..   Gender = col_character(),\n  ..   Region = col_character(),\n  ..   Smoking_History = col_character(),\n  ..   Diabetes_History = col_character(),\n  ..   Hypertension_History = col_character(),\n  ..   Cholesterol_Level = col_double(),\n  ..   Physical_Activity = col_character(),\n  ..   Diet_Quality = col_character(),\n  ..   Alcohol_Consumption = col_character(),\n  ..   Stress_Levels = col_double(),\n  ..   BMI = col_double(),\n  ..   Heart_Rate = col_double(),\n  ..   Systolic_BP = col_double(),\n  ..   Diastolic_BP = col_double(),\n  ..   Family_History = col_character(),\n  ..   Heart_Attack_Occurrence = col_character(),\n  ..   Extra_Column_1 = col_double(),\n  ..   Extra_Column_2 = col_double(),\n  ..   Extra_Column_3 = col_double(),\n  ..   Extra_Column_4 = col_double(),\n  ..   Extra_Column_5 = col_double(),\n  ..   Extra_Column_6 = col_double(),\n  ..   Extra_Column_7 = col_double(),\n  ..   Extra_Column_8 = col_double(),\n  ..   Extra_Column_9 = col_double(),\n  ..   Extra_Column_10 = col_double(),\n  ..   Extra_Column_11 = col_double(),\n  ..   Extra_Column_12 = col_double(),\n  ..   Extra_Column_13 = col_double(),\n  ..   Extra_Column_14 = col_double(),\n  ..   Extra_Column_15 = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "",
    "text": "The following R packages will be used in this exercise:\n\n\n\n\n\n\n\nR Package\nDescription\n\n\n\n\nggridges\nFor plotting ridgeline plots.\n\n\nggdist\nFor visualising distribution and uncertainty.\n\n\ntidyverse\n\n\n\nggthemes\nProvides additional themes, scales, and geoms for ggplots package.\n\n\ncolorspace\nFor selecting individual colors or color palettes and employing them in various kinds of visualisations.\n\n\n\nThe following code chunk will be used to load these packages into R:\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\n\n\nThe code chunk below uses read_csv( ) to import exam_data.csv into R and save it into a tibble data frame:\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#installing-and-loading-the-packages",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#installing-and-loading-the-packages",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "",
    "text": "The following R packages will be used in this exercise:\n\n\n\n\n\n\n\nR Package\nDescription\n\n\n\n\nggridges\nFor plotting ridgeline plots.\n\n\nggdist\nFor visualising distribution and uncertainty.\n\n\ntidyverse\n\n\n\nggthemes\nProvides additional themes, scales, and geoms for ggplots package.\n\n\ncolorspace\nFor selecting individual colors or color palettes and employing them in various kinds of visualisations.\n\n\n\nThe following code chunk will be used to load these packages into R:\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#data-import",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#data-import",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "",
    "text": "The code chunk below uses read_csv( ) to import exam_data.csv into R and save it into a tibble data frame:\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#plotting-ridgeline-graphs-ggridges-method",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#plotting-ridgeline-graphs-ggridges-method",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "2.1 Plotting Ridgeline Graphs: ggridges Method",
    "text": "2.1 Plotting Ridgeline Graphs: ggridges Method\nMain Geoms Used to Plot Ridgeline Plots: geom_ridgeline( ) and geom_density_ridges( ).\n\n2.1.1 Using geom_density_ridges( )\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n2.1.2 Using geom_ridgeline()\n\nexam_dens &lt;- do.call(rbind, lapply(split(exam, exam$CLASS), function(df) {\n  dens &lt;- density(df$ENGLISH, adjust = 0.9) # Change the adjust parameter to control how detailed the density estimates are.\n  data.frame(ENGLISH = dens$x, density = dens$y, CLASS = unique(df$CLASS))\n}))\n\nggplot(exam_dens, aes(x = ENGLISH, y = CLASS, height = density, group = CLASS)) +\n  geom_ridgeline(\n    scale = 50,  # Adjust the scale variable  to change overlap and height of ridges.\n    fill = \"#7097BB\",\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL,\n    expand = expansion(add = c(0.1, 0.1))\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\ngeom_ridgeline() requires an explicitly provided height aesthetic, which is set to the manually calculated density.\ngeom_density_ridges() does not seem to require any pre-processing steps for density calculation. Density estimation is handled internally by the geom_density_ridges() function."
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#varying-fill-colours-along-the-x-axis",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#varying-fill-colours-along-the-x-axis",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "2.2 Varying Fill Colours Along the X-Axis",
    "text": "2.2 Varying Fill Colours Along the X-Axis\nThis can be achieved via geom_ridgeline_gradient() or geom_density_ridges_gradient().\n\n2.2.1 Using geom_density_ridges_gradient()\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#mapping-the-probabilities-directly-onto-colour",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#mapping-the-probabilities-directly-onto-colour",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "2.3 Mapping the Probabilities Directly onto Colour",
    "text": "2.3 Mapping the Probabilities Directly onto Colour\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "2.4 Ridgeline Plots with Quantile Lines",
    "text": "2.4 Ridgeline Plots with Quantile Lines\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\nAlternatively, cut-off points can also be specified as shown in the code chunk below:\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#plotting-a-half-eye-graph",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#plotting-a-half-eye-graph",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "3.1. Plotting a Half Eye Graph",
    "text": "3.1. Plotting a Half Eye Graph\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#adding-the-boxplot-with-geom_boxplot",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#adding-the-boxplot-with-geom_boxplot",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "3.2 Adding the Boxplot with geom_boxplot( )",
    "text": "3.2 Adding the Boxplot with geom_boxplot( )\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#adding-the-dot-plots-with-stat_dots",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#adding-the-dot-plots-with-stat_dots",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "3.3 Adding the Dot Plots with stat_dots( )",
    "text": "3.3 Adding the Dot Plots with stat_dots( )\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#finishing-touch---flipping-the-plot-horizontally",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#finishing-touch---flipping-the-plot-horizontally",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "3.4 Finishing Touch - Flipping the Plot Horizontally",
    "text": "3.4 Finishing Touch - Flipping the Plot Horizontally\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#disclaimer",
    "href": "Hands-on Exercise/Hands-on_Ex04/Hands-on_Ex041.html#disclaimer",
    "title": "Hands-on Exercise 4.1: Visualising Distribution",
    "section": "4.1 Disclaimer",
    "text": "4.1 Disclaimer\nThis document includes content written with the assistance of ChatGPT, which was used for grammar correction, correction of code and the explanation of arguments for the various packages."
  }
]